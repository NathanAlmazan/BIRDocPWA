{"version":3,"file":"static/js/859.91b09c66.chunk.js","mappings":"qcA2BMA,GAAeC,EAAAA,EAAAA,IAAO,MAAPA,EAAc,SAAAC,GAAQ,MAAQ,CACjDC,SAAU,IACVC,OAAQ,OACRC,QAAS,OACTC,UAAW,QACXC,cAAe,SACfC,eAAgB,SAChBC,QAPyCP,EAALQ,MAOrBC,QAAQ,GAAI,GAC5B,IAaYC,EAAqB,SAACC,EAAgBC,GAC/C,OAAe,IAAXD,EAAmC,IAAbC,EACN,IAAXD,EAAmC,IAAbC,EACX,IAAXD,GAA2B,IAAXA,EAAqB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIE,SAASD,GAChE,IAAXD,GAA2B,IAAXA,GAAqB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIE,SAASD,EAErF,EAEe,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KACHC,GAAYC,EAAAA,EAAAA,GAA6CC,EAAAA,IAA/DC,KACMC,GAAUH,EAAAA,EAAAA,GAAmCI,EAAAA,IAAnDF,KACRG,GAAkDC,EAAAA,EAAAA,GAAyCC,EAAAA,IAAWC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA/FK,EAASF,EAAA,GAAAG,EAAAH,EAAA,GAAUI,EAAWD,EAAjBT,KAAmBW,EAAKF,EAALE,MACvCC,EAA4CC,EAAAA,WAA4BC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAAjEG,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAAwCJ,EAAAA,UAAwB,GAAKK,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA9DE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAA8BR,EAAAA,UAAwB,GAAMS,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAArDE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAAsCZ,EAAAA,SAAiC,CACrEa,UAAW,GACXC,SAAU,GACVrC,SAAU,EACVsC,UAAW,EACXvC,OAAQ,EACRwC,SAAU,KACVC,GAAAvB,EAAAA,EAAAA,GAAAkB,EAAA,GAPKM,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAQ1BJ,EAA+DK,EAA/DL,UAAWC,GAAoDI,EAApDJ,SAAUrC,GAA0CyC,EAA1CzC,SAAUsC,GAAgCG,EAAhCH,UAAWvC,GAAqB0C,EAArB1C,OAAQwC,GAAaE,EAAbF,SAE1DhB,EAAAA,WAAgB,WACd,GAAIhB,EAAS,CACT,IAAMoC,EAAWpC,EAAQqC,iBAAiBC,MAAK,SAAAC,GAAM,OAAIA,EAAO9C,WAAaA,EAAQ,IACrF0B,EAAkBiB,GAEdA,GAAY,CAAC,EAAG,EAAG,EAAG,GAAG1C,SAASF,KAClC+B,GAAgB,GAChBY,GAAe,SAAAK,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAET,UAAWK,EAASM,eAAe,GAAGX,WAAS,KAE/EK,GAAYA,EAASM,eAAeC,OAAS,GAClDpB,GAAgB,GAChBY,GAAe,SAAAK,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAET,UAAWK,EAASM,eAAe,GAAGX,WAAS,KAE/EK,IACLb,GAAgB,GAChBY,GAAe,SAAAK,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAET,UAAWK,EAASM,eAAe,GAAGX,WAAS,IAE5F,CACF,GAAG,CAACtC,GAAUO,EAASR,KAEvBwB,EAAAA,WAAgB,WACC,IAAXxB,IACA+B,GAAgB,GAChBY,GAAe,SAAAK,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAET,UAAW,EAAGtC,SAAU,GAAC,KAC5C,IAAXD,IACP+B,GAAgB,GAChBY,GAAe,SAAAK,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAET,UAAW,EAAGtC,SAAU,GAAC,KACvDO,GACPmC,GAAe,SAAAK,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAE/C,SAAUO,EAAQqC,iBAAiBO,QAAO,SAAAL,GAAM,OAAIhD,EAAmBC,GAAQ+C,EAAO9C,SAAS,IAAE,GAAGA,UAAQ,GAEvJ,GAAG,CAACD,GAAQQ,IAEZgB,EAAAA,WAAgB,WACVH,IACAf,GAAS+C,EAAAA,EAAAA,IAAM,CACXC,IAAKjC,EAAYF,UAAUoC,UAC3BC,SAAUnC,EAAYF,UAAUkB,UAAY,IAAMhB,EAAYF,UAAUmB,SACxEmB,KAAMpC,EAAYF,UAAUsC,KAC5BV,OAAQ,CACJR,UAAWlB,EAAYF,UAAUuC,cAAcnB,UAC/CoB,YAAatC,EAAYF,UAAUuC,cAAcC,YACjDC,SAAU,GACVC,cAAe,CACX5D,SAAUoB,EAAYF,UAAUuC,cAAcG,cAAc5D,SAC5D6D,WAAYzC,EAAYF,UAAUuC,cAAcG,cAAcC,WAC9DZ,eAAgB,QAI5B9C,EAAS,kBAEf,GAAG,CAACiB,EAAajB,EAAUE,IAE3B,IAAMyD,GAAmB,SAACC,GACxBrB,GAAcM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIP,GAAW,IAAAuB,EAAAA,EAAAA,GAAA,GAAGD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,QACrE,EAEMC,GAAkB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOV,GAAuC,OAAAQ,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChD,OAAvBd,EAAMe,iBAAiBH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGb3D,EAAU,CACZ6D,UAAW,CACPrE,KAAM,CACF0B,UAAWA,EACXC,SAAUA,GACVrC,SAAUsC,GACVC,SAAUA,GACVxC,OAAQA,OAGlB,OAAA4E,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,iCAAAA,EAAAM,OAAA,GAAAR,EAAA,kBAEP,gBAhBuBS,GAAA,OAAAb,EAAAc,MAAA,KAAAC,UAAA,KAkBxB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACjG,SAAS,KAAIkG,UACtBC,EAAAA,EAAAA,MAACtG,EAAY,CAAAqG,SAAA,EACXC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,GAAI,CAAEC,GAAI,GAAIJ,SAAA,EACnBF,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAP,SAAC,aAGtCF,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CAACF,GAAI,CAAEK,MAAO,kBAAmBR,SAAC,qCAG9ClE,IACGgE,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CAACC,SAAS,QAAQP,GAAI,CAAEQ,GAAI,GAAIX,SAAElE,EAAM8E,WAGlDX,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAC5F,QAAS,EAAGuG,UAAU,OAAOC,SAAUjC,GAAmBmB,SAAA,EAC7DF,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACNpC,KAAK,YACLqC,MAAM,aACNpC,MAAO/B,EACPoE,SAAU1C,GACV2C,WAAS,EACTC,UAAQ,KAGZrB,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACNpC,KAAK,WACLqC,MAAM,YACNpC,MAAO9B,GACPmE,SAAU1C,GACV2C,WAAS,EACTC,UAAQ,IAGX/F,IACG0E,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACNpC,KAAK,SACLqC,MAAM,WACNpC,MAAOpE,GACPyG,SAAU1C,GACV2C,WAAS,EACTC,UAAQ,EACRC,QAAM,EAAApB,SAEL5E,EAAMiG,YAAYC,KAAI,SAAArD,GAAI,OACvB6B,EAAAA,EAAAA,KAACyB,EAAAA,EAAQ,CAAmB3C,MAAOX,EAAKzD,OAAOwF,SAAE/B,EAAKuD,UAAvCvD,EAAKzD,OAAsD,MAKrFQ,IACG8E,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACNpC,KAAK,WACLqC,MAAM,SACNpC,MAAOnE,GACPwG,SAAU1C,GACV2C,WAAS,EACTC,UAAQ,EACRC,QAAM,EAAApB,SAELhF,EAAQqC,iBAAiBO,QAAO,SAAAL,GAAM,OAAIhD,EAAmBC,GAAQ+C,EAAO9C,SAAS,IAAE6G,KAAI,SAAA/D,GAAM,OAC9FuC,EAAAA,EAAAA,KAACyB,EAAAA,EAAQ,CAAuB3C,MAAOrB,EAAO9C,SAASuF,SAAEzC,EAAOe,YAAjDf,EAAO9C,SAAgE,MAKlG6B,GAAgBJ,GAAkBA,EAAewB,eAAeC,OAAS,IACrEmC,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACNpC,KAAK,YACLqC,MAAM,UACNpC,MAAO7B,GACPkE,SAAU1C,GACV2C,WAAS,EACTC,UAAQ,EACRC,QAAM,EAAApB,SAEL9D,EAAewB,eAAeE,QAAO,SAAA6D,GAAO,MAA4B,YAAxBA,EAAQtD,WAAyB,IAAEmD,KAAI,SAAAG,GAAO,OAC3F3B,EAAAA,EAAAA,KAACyB,EAAAA,EAAQ,CAAyB3C,MAAO6C,EAAQ1E,UAAUiD,SAA0B,YAAxByB,EAAQtD,YAA4B,OAASsD,EAAQtD,aAAnGsD,EAAQ1E,UAAkH,OAKrJ+C,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACNG,WAAS,EACTQ,KAAMhF,EAAU,OAAS,WACzBsE,MAAM,WACNrC,KAAK,WACLwC,UAAQ,EACRvC,MAAO5B,GACPiE,SAAU1C,GACVoD,WAAY,CACZC,cACI9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAc,CAACC,SAAS,MAAK9B,UAC1BF,EAAAA,EAAAA,KAACiC,EAAAA,EAAU,CAACC,QAAS,kBAAMrF,GAAYD,EAAQ,EAAEuF,KAAK,MAAKjC,SACtDtD,GAAWoD,EAAAA,EAAAA,KAACoC,EAAAA,EAAiB,KAAMpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAc,YAOnErC,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,CACHV,KAAK,SACLpB,QAAQ,YACRE,MAAM,YACNU,WAAS,EAAAlB,SACZ,cAKLF,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CAACC,QAAQ,QAAQ+B,MAAM,SAASlC,GAAI,CAAEmC,GAAI,GAAItC,UACvDF,EAAAA,EAAAA,KAACyC,EAAAA,EAAI,CAACjC,QAAQ,YAAY0B,QAAS,kBAAMpH,EAAS,iBAAiB,EAAEuF,GAAI,CAAEqC,OAAQ,WAAYxC,SAAC,2BAO1G,C,8TCnPMrG,GAAeC,EAAAA,EAAAA,IAAO,MAAPA,EAAc,SAAAC,GAAQ,MAAQ,CACjDC,SAAU,IACVC,OAAQ,OACRC,QAAS,OACTE,cAAe,SACfC,eAAgB,SAChBC,QANyCP,EAALQ,MAMrBC,QAAQ,GAAI,GAC5B,IAcc,SAASmI,IACtB,IAAM7H,GAAWC,EAAAA,EAAAA,MACHG,GAAYC,EAAAA,EAAAA,GAA6CC,EAAAA,IAA/DC,KACMC,GAAUH,EAAAA,EAAAA,GAAmCI,EAAAA,IAAnDF,KACRG,GAAqDC,EAAAA,EAAAA,GAA8CmH,EAAAA,IAAcjH,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA1GqH,EAAYlH,EAAA,GAAAG,EAAAH,EAAA,GAAUI,EAAWD,EAAjBT,KAAmBW,EAAKF,EAALE,MAC1CC,EAA8BC,EAAAA,UAAwB,GAAMC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAArDW,EAAOT,EAAA,GAAEU,EAAUV,EAAA,GAC1BG,EAAwCJ,EAAAA,UAAwB,GAAKK,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA9DE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAA4CR,EAAAA,WAA4BS,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAAjEN,EAAcO,EAAA,GAAEN,EAAiBM,EAAA,GACxCG,EAAsCZ,EAAAA,SAAiC,CACrEa,UAAW,GACXC,SAAU,GACVrC,SAAU,EACVsC,UAAW,EACXC,SAAU,GACVxC,OAAQ,EACRoI,UAAW,KACX3F,GAAAvB,EAAAA,EAAAA,GAAAkB,EAAA,GARKM,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAS1BJ,EAA0EK,EAA1EL,UAAWC,EAA+DI,EAA/DJ,SAAUrC,EAAqDyC,EAArDzC,SAAUsC,EAA2CG,EAA3CH,UAAWvC,GAAgC0C,EAAhC1C,OAAQwC,GAAwBE,EAAxBF,SAAU4F,GAAc1F,EAAd0F,UAEpE5G,EAAAA,WAAgB,WACd,GAAIhB,EAAS,CACT,IAAMoC,EAAWpC,EAAQqC,iBAAiBC,MAAK,SAAAC,GAAM,OAAIA,EAAO9C,WAAaA,CAAQ,IACrF0B,EAAkBiB,GAEdA,GAAY,CAAC,EAAG,EAAG,EAAG,GAAG1C,SAASF,KAClC+B,GAAgB,GAChBY,GAAe,SAAAK,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAET,UAAWK,EAASM,eAAe,GAAGX,WAAS,KAE/EK,GAAYA,EAASM,eAAeC,OAAS,GAClDpB,GAAgB,GAChBY,GAAe,SAAAK,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAET,UAAWK,EAASM,eAAe,GAAGX,WAAS,KAE/EK,IACLb,GAAgB,GAChBY,GAAe,SAAAK,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAET,UAAWK,EAASM,eAAe,GAAGX,WAAS,IAE5F,CACF,GAAG,CAACtC,EAAUO,EAASR,KAEvBwB,EAAAA,WAAgB,WACC,IAAXxB,IACA+B,GAAgB,GAChBY,GAAe,SAAAK,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAET,UAAW,EAAGtC,SAAU,GAAC,KAC5C,IAAXD,IACP+B,GAAgB,GAChBY,GAAe,SAAAK,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAET,UAAW,EAAGtC,SAAU,GAAC,KACvDO,GACPmC,GAAe,SAAAK,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAE/C,SAAUO,EAAQqC,iBAAiBO,QAAO,SAAAL,GAAM,OAAIhD,EAAAA,EAAAA,oBAAmBC,GAAQ+C,EAAO9C,SAAS,IAAE,GAAGA,UAAQ,GAEvJ,GAAG,CAACD,GAAQQ,IAEZgB,EAAAA,WAAgB,WACVH,GAAajB,EAAS,cAC5B,GAAG,CAACiB,EAAajB,IAEjB,IAAM2D,GAAmB,SAACC,GACxBrB,GAAcM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIP,GAAW,IAAAuB,EAAAA,EAAAA,GAAA,GAAGD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,QACrE,EAEMC,GAAkB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOV,GAAuC,OAAAQ,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChD,OAAvBd,EAAMe,iBAAiBH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGbqD,EAAa,CACfnD,UAAW,CACPrE,KAAM,CACF0B,UAAWA,EACXC,SAAUA,EACVrC,SAAUsC,EACVvC,OAAQA,GACRoI,UAAWA,GACX5F,SAAUA,OAGpB,OAAAoC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,iCAAAA,EAAAM,OAAA,GAAAR,EAAA,kBAEP,gBAjBuBS,GAAA,OAAAb,EAAAc,MAAA,KAAAC,UAAA,KAmBxB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACjG,SAAS,KAAIkG,UACtBC,EAAAA,EAAAA,MAACtG,EAAY,CAAAqG,SAAA,EACXC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,GAAI,CAAEC,GAAI,GAAIJ,SAAA,EACnBF,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAP,SAAC,sBAGtCF,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CAACF,GAAI,CAAEK,MAAO,kBAAmBR,SAAC,qCAG9ClE,IACGgE,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CAACC,SAAS,QAAQP,GAAI,CAAEQ,GAAI,GAAIX,SAAElE,EAAM8E,WAGlDX,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAC5F,QAAS,EAAGuG,UAAU,OAAOC,SAAUjC,GAAmBmB,SAAA,EAC7DF,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACNpC,KAAK,YACLqC,MAAM,aACNpC,MAAO/B,EACPoE,SAAU1C,GACV2C,WAAS,EACTC,UAAQ,KAGZrB,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACNpC,KAAK,WACLqC,MAAM,YACNpC,MAAO9B,EACPmE,SAAU1C,GACV2C,WAAS,EACTC,UAAQ,IAGX/F,IACG0E,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACNpC,KAAK,SACLqC,MAAM,WACNpC,MAAOpE,GACPyG,SAAU1C,GACV2C,WAAS,EACTC,UAAQ,EACRC,QAAM,EAAApB,SAEL5E,EAAMiG,YAAYC,KAAI,SAAArD,GAAI,OACvB6B,EAAAA,EAAAA,KAACyB,EAAAA,EAAQ,CAAmB3C,MAAOX,EAAKzD,OAAOwF,SAAE/B,EAAKuD,UAAvCvD,EAAKzD,OAAsD,MAKrFQ,IACG8E,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACNpC,KAAK,WACLqC,MAAM,SACNpC,MAAOnE,EACPwG,SAAU1C,GACV2C,WAAS,EACTC,UAAQ,EACRC,QAAM,EAAApB,SAELhF,EAAQqC,iBAAiBO,QAAO,SAAAL,GAAM,OAAIhD,EAAAA,EAAAA,oBAAmBC,GAAQ+C,EAAO9C,SAAS,IAAE6G,KAAI,SAAA/D,GAAM,OAC9FuC,EAAAA,EAAAA,KAACyB,EAAAA,EAAQ,CAAuB3C,MAAOrB,EAAO9C,SAASuF,SAAEzC,EAAOe,YAAjDf,EAAO9C,SAAgE,MAKjG6B,GAAgBJ,GAAkBA,EAAewB,eAAeC,OAAS,IACtEmC,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACNpC,KAAK,YACLqC,MAAM,UACNpC,MAAO7B,EACPkE,SAAU1C,GACV2C,WAAS,EACTC,UAAQ,EACRC,QAAM,EAAApB,SAEL9D,EAAewB,eAAeE,QAAO,SAAA6D,GAAO,MAA4B,YAAxBA,EAAQtD,WAAyB,IAAEmD,KAAI,SAAAG,GAAO,OAC3F3B,EAAAA,EAAAA,KAACyB,EAAAA,EAAQ,CAAyB3C,MAAO6C,EAAQ1E,UAAUiD,SAA0B,YAAxByB,EAAQtD,YAA4B,OAASsD,EAAQtD,aAAnGsD,EAAQ1E,UAAkH,OAKrJ+C,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACN8B,aAAa,MACblE,KAAK,YACLqC,MAAM,gBACNpC,MAAOgE,GACP3B,SAAU1C,GACV2C,WAAS,EACTC,UAAQ,EACR2B,WAAY,CAAEC,IAAK,EAAGC,IAAK,MAG/BlD,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACNG,WAAS,EACTQ,KAAMhF,EAAU,OAAS,WACzBsE,MAAM,WACNrC,KAAK,WACLwC,UAAQ,EACRvC,MAAO5B,GACPiE,SAAU1C,GACVoD,WAAY,CACZC,cACI9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAc,CAACC,SAAS,MAAK9B,UAC1BF,EAAAA,EAAAA,KAACiC,EAAAA,EAAU,CAACC,QAAS,kBAAMrF,GAAYD,EAAQ,EAAEuF,KAAK,MAAKjC,SACtDtD,GAAWoD,EAAAA,EAAAA,KAACoC,EAAAA,EAAiB,KAAMpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAc,YAOnErC,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,CACHV,KAAK,SACLpB,QAAQ,YACRE,MAAM,YACNU,WAAS,EAAAlB,SACZ,iBAKLF,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CAACC,QAAQ,QAAQ+B,MAAM,SAASlC,GAAI,CAAEmC,GAAI,GAAItC,UACvDF,EAAAA,EAAAA,KAACyC,EAAAA,EAAI,CAACjC,QAAQ,YAAY0B,QAAS,kBAAMpH,EAAS,cAAc,EAAEuF,GAAI,CAAEqC,OAAQ,WAAYxC,SAAC,2BAOvG,C,2BC1PIiD,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,sNACD,cACJN,EAAQ,EAAUG,C,0BCVdL,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,8fACD,iBACJN,EAAQ,EAAUG,C,kLCXZI,EAAY,CAAC,YAAa,YAAa,iBAAkB,QAAS,WAAY,WAS9EC,GAAeC,EAAAA,EAAAA,KACfC,GAA+BC,EAAAA,EAAAA,GAAa,MAAO,CACvDnF,KAAM,eACNoF,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAO,WAADG,QAAYC,EAAAA,EAAAA,GAAWC,OAAOJ,EAAWrK,aAAeqK,EAAWK,OAASN,EAAOM,MAAOL,EAAWM,gBAAkBP,EAAOO,eAC3J,IAEIC,EAAuB,SAAAC,GAAO,OAAIC,EAAAA,EAAAA,GAAoB,CAC1DX,MAAOU,EACPhG,KAAM,eACNgF,aAAAA,GACA,E,kCCnBI5D,EDmCS,WAAuC,IAAd8E,EAAOhF,UAAAlC,OAAA,QAAAmH,IAAAjF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjDkF,EAKIF,EAHFG,sBAAAA,OAAqB,IAAAD,EAAGlB,EAA4BkB,EAAAE,EAGlDJ,EAFFK,cAAAA,OAAa,IAAAD,EAAGP,EAAoBO,EAAAE,EAElCN,EADFO,cAAAA,OAAa,IAAAD,EAAG,eAAcA,EAE1BE,EAAgBL,GAAsB,SAAAnL,GAAA,IAC1CQ,EAAKR,EAALQ,MACA8J,EAAUtK,EAAVsK,WAAU,OACNmB,EAAAA,EAAAA,GAAS,CACbC,MAAO,OACPC,WAAY,OACZC,UAAW,aACXC,YAAa,OACb1L,QAAS,UACPmK,EAAWM,iBAAchG,EAAAA,EAAAA,GAAA,CAC3BkH,YAAatL,EAAMC,QAAQ,GAC3BsL,aAAcvL,EAAMC,QAAQ,IAE3BD,EAAMwL,YAAYC,GAAG,MAAQ,CAC5BH,YAAatL,EAAMC,QAAQ,GAC3BsL,aAAcvL,EAAMC,QAAQ,KAE9B,IAAE,SAAAyL,GAAA,IACF1L,EAAK0L,EAAL1L,MACU,OAAA0L,EAAV5B,WACeK,OAASwB,OAAOC,KAAK5L,EAAMwL,YAAYK,QAAQC,QAAO,SAACC,EAAKC,GAC3E,IAAMC,EAAaD,EACbzH,EAAQvE,EAAMwL,YAAYK,OAAOI,GAOvC,OANc,IAAV1H,IAEFwH,EAAI/L,EAAMwL,YAAYC,GAAGQ,IAAe,CACtCxM,SAAU,GAAFuK,OAAKzF,GAAKyF,OAAGhK,EAAMwL,YAAYU,QAGpCH,CACT,GAAG,CAAC,EAAE,IAAE,SAAAI,GAAA,IACNnM,EAAKmM,EAALnM,MACA8J,EAAUqC,EAAVrC,WAAU,OACNmB,EAAAA,EAAAA,GAAS,CAAC,EAA2B,OAAxBnB,EAAWrK,WAAiB2E,EAAAA,EAAAA,GAAA,GAE5CpE,EAAMwL,YAAYC,GAAG,MAAQ,CAE5BhM,SAAU2M,KAAKzD,IAAI3I,EAAMwL,YAAYK,OAAOQ,GAAI,OAEjDvC,EAAWrK,UAEU,OAAxBqK,EAAWrK,WAAiB2E,EAAAA,EAAAA,GAAA,GAEzBpE,EAAMwL,YAAYC,GAAG3B,EAAWrK,UAAY,CAE3CA,SAAU,GAAFuK,OAAKhK,EAAMwL,YAAYK,OAAO/B,EAAWrK,WAASuK,OAAGhK,EAAMwL,YAAYU,QAEjF,IACIxG,EAAyB/D,EAAAA,YAAiB,SAAmB2I,EAASgC,GAC1E,IAAM1C,EAAQiB,EAAcP,GAExBiC,EAKE3C,EALF2C,UAASC,EAKP5C,EAJFpD,UAAAA,OAAS,IAAAgG,EAAG,MAAKA,EAAAC,EAIf7C,EAHFQ,eAAAA,OAAc,IAAAqC,GAAQA,EAAAC,EAGpB9C,EAFFO,MAAAA,OAAK,IAAAuC,GAAQA,EAAAC,EAEX/C,EADFnK,SAAAA,OAAQ,IAAAkN,EAAG,KAAIA,EAEjBC,GAAQC,EAAAA,EAAAA,GAA8BjD,EAAOP,GACzCS,GAAamB,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrCpD,UAAAA,EACA4D,eAAAA,EACAD,MAAAA,EACA1K,SAAAA,IAIIqN,EAxFgB,SAAChD,EAAYiB,GACrC,IAIE+B,EAIEhD,EAJFgD,QACA3C,EAGEL,EAHFK,MACAC,EAEEN,EAFFM,eACA3K,EACEqK,EADFrK,SAEIsN,EAAQ,CACZhD,KAAM,CAAC,OAAQtK,GAAY,WAAJuK,QAAeC,EAAAA,EAAAA,GAAWC,OAAOzK,KAAc0K,GAAS,QAASC,GAAkB,mBAE5G,OAAO4C,EAAAA,EAAAA,GAAeD,GAZW,SAAArD,GAC/B,OAAOuD,EAAAA,EAAAA,GAAqBlC,EAAerB,EAC7C,GAUuDoD,EACzD,CA0EoBI,CAAkBpD,EAAYiB,GAC9C,OAGEtF,EAAAA,EAAAA,KAAKuF,GAAeC,EAAAA,EAAAA,GAAS,CAC3BkC,GAAI3G,EAGJsD,WAAYA,EACZyC,WAAWa,EAAAA,EAAAA,GAAKN,EAAQ/C,KAAMwC,GAC9BD,IAAKA,GACJM,GAEP,IAWA,OAAOlH,CACT,CCrIkB2H,CAAgB,CAChC1C,uBAAuBpL,EAAAA,EAAAA,IAAO,MAAO,CACnC+E,KAAM,eACNoF,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAO,WAADG,QAAYC,EAAAA,EAAAA,GAAWC,OAAOJ,EAAWrK,aAAeqK,EAAWK,OAASN,EAAOM,MAAOL,EAAWM,gBAAkBP,EAAOO,eAC3J,IAEFS,cAAe,SAAAP,GAAO,OAAIO,EAAAA,EAAAA,GAAc,CACtCjB,MAAOU,EACPhG,KAAM,gBACN,IA6CJ,G","sources":["pages/authentication/LoginUser.tsx","pages/authentication/RegisterUser.tsx","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\"\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport Stack from '@mui/material/Stack';\r\nimport Link from '@mui/material/Link';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Button from '@mui/material/Button';\r\nimport Alert from '@mui/material/Alert';\r\n// icons\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n// api\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { BirOffices, Roles, UserAccounts } from '../../api/threads/types';\r\nimport { GET_ALL_BIR_OFFICES, GET_ALL_ROLES, USER_LOGIN } from '../../api/offices';\r\n// redux\r\nimport { useAppDispatch } from '../../redux/hooks';\r\nimport { login } from '../../redux/slice/auth';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  maxWidth: 480,\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  minHeight: '100vh',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(12, 0)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport interface RegisterUserForm {\r\n    firstName: string;\r\n    lastName: string;\r\n    officeId: number;\r\n    roleId: number;\r\n    sectionId: number;\r\n    password: string;\r\n}\r\n\r\nexport const getFilteredOffices = (roleId: number, officeId: number): boolean => {\r\n    if (roleId === 1) return (officeId === 1);\r\n    else if (roleId === 2) return (officeId === 2);\r\n    else if (roleId === 3 || roleId === 4) return [11, 12, 13, 14, 15, 16, 17].includes(officeId);\r\n    else if (roleId === 5 || roleId === 6) return [3, 4, 5, 6, 7, 8, 9, 10].includes(officeId);\r\n    else return true;\r\n}\r\n\r\nexport default function LoginUser() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n  const { data: offices } = useQuery<{ getAllBirOffices: BirOffices[] }>(GET_ALL_BIR_OFFICES);\r\n  const { data: roles } = useQuery<{ getAllRoles: Roles[] }>(GET_ALL_ROLES);\r\n  const [userLogin, { data: userAccount, error }] = useMutation<{ userLogin: UserAccounts }>(USER_LOGIN);\r\n  const [selectedOffice, setSelectedOffice] = React.useState<BirOffices>();\r\n  const [showSections, setShowSections] = React.useState<boolean>(true);\r\n  const [visible, setVisible] = React.useState<boolean>(false);\r\n  const [credentials, setCredentials] = React.useState<RegisterUserForm>({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    officeId: 1,\r\n    sectionId: 1,\r\n    roleId: 9,\r\n    password: \"\"\r\n  })\r\n  const { firstName, lastName, officeId, sectionId, roleId, password } = credentials;\r\n\r\n  React.useEffect(() => {\r\n    if (offices) {\r\n        const selected = offices.getAllBirOffices.find(office => office.officeId === officeId);\r\n        setSelectedOffice(selected);\r\n\r\n        if (selected && [3, 4, 5, 6].includes(roleId)) {\r\n            setShowSections(false);\r\n            setCredentials(state => ({ ...state, sectionId: selected.officeSections[0].sectionId }));\r\n        }\r\n        else if (selected && selected.officeSections.length > 1) {\r\n            setShowSections(true);\r\n            setCredentials(state => ({ ...state, sectionId: selected.officeSections[1].sectionId }));\r\n        }\r\n        else if (selected) {\r\n            setShowSections(false);\r\n            setCredentials(state => ({ ...state, sectionId: selected.officeSections[0].sectionId }));\r\n        }\r\n    }\r\n  }, [officeId, offices, roleId]);\r\n\r\n  React.useEffect(() => {\r\n    if (roleId === 1) {\r\n        setShowSections(false);\r\n        setCredentials(state => ({ ...state, sectionId: 1, officeId: 1 }));\r\n    } else if (roleId === 2) {\r\n        setShowSections(false);\r\n        setCredentials(state => ({ ...state, sectionId: 2, officeId: 2 }));\r\n    } else if (offices) {\r\n        setCredentials(state => ({ ...state, officeId: offices.getAllBirOffices.filter(office => getFilteredOffices(roleId, office.officeId))[0].officeId }));\r\n    }\r\n  }, [roleId, offices])\r\n\r\n  React.useEffect(() => {\r\n    if (userAccount) {\r\n        dispatch(login({\r\n            uid: userAccount.userLogin.accountId,\r\n            username: userAccount.userLogin.firstName + \" \" + userAccount.userLogin.lastName,\r\n            role: userAccount.userLogin.role,\r\n            office: {\r\n                sectionId: userAccount.userLogin.officeSection.sectionId,\r\n                sectionName: userAccount.userLogin.officeSection.sectionName,\r\n                officers: [],\r\n                sectionOffice: {\r\n                    officeId: userAccount.userLogin.officeSection.sectionOffice.officeId,\r\n                    officeName: userAccount.userLogin.officeSection.sectionOffice.officeName,\r\n                    officeSections: []\r\n                }\r\n            }\r\n        }));\r\n        navigate(\"/app/dashboard\");\r\n    }\r\n  }, [userAccount, navigate, dispatch])\r\n\r\n  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCredentials({ ...credentials, [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const handleRegisterUser = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n        await userLogin({\r\n            variables: {\r\n                data: {\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    officeId: sectionId,\r\n                    password: password,\r\n                    roleId: roleId\r\n                }\r\n            }\r\n        })\r\n    } catch (err) {}\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <ContentStyle>\r\n        <Stack sx={{ mb: 5 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n              Sign In\r\n          </Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}>Enter your credentials below.</Typography>\r\n        </Stack>\r\n\r\n        {error && (\r\n            <Alert severity='error' sx={{ my: 2 }}>{error.message}</Alert>\r\n        )}\r\n        \r\n        <Stack spacing={2} component='form' onSubmit={handleRegisterUser}>\r\n            <TextField \r\n                name='firstName'\r\n                label='First Name'\r\n                value={firstName}\r\n                onChange={handleTextChange}\r\n                fullWidth\r\n                required\r\n            />\r\n\r\n            <TextField \r\n                name='lastName'\r\n                label='Last Name'\r\n                value={lastName}\r\n                onChange={handleTextChange}\r\n                fullWidth\r\n                required\r\n            />\r\n\r\n            {roles && (\r\n                <TextField \r\n                    name='roleId'\r\n                    label='Position'\r\n                    value={roleId}\r\n                    onChange={handleTextChange}\r\n                    fullWidth\r\n                    required\r\n                    select\r\n                >\r\n                    {roles.getAllRoles.map(role => (\r\n                        <MenuItem key={role.roleId} value={role.roleId}>{role.roleName}</MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            )}\r\n\r\n            {offices && (\r\n                <TextField \r\n                    name='officeId'\r\n                    label='Office'\r\n                    value={officeId}\r\n                    onChange={handleTextChange}\r\n                    fullWidth\r\n                    required\r\n                    select\r\n                >\r\n                    {offices.getAllBirOffices.filter(office => getFilteredOffices(roleId, office.officeId)).map(office => (\r\n                        <MenuItem key={office.officeId} value={office.officeId}>{office.officeName}</MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            )}\r\n\r\n           {showSections && selectedOffice && selectedOffice.officeSections.length > 1 && (\r\n                <TextField \r\n                    name='sectionId'\r\n                    label='Section'\r\n                    value={sectionId}\r\n                    onChange={handleTextChange}\r\n                    fullWidth\r\n                    required\r\n                    select\r\n                >\r\n                    {selectedOffice.officeSections.filter(section => section.sectionName !== \"default\").map(section => (\r\n                        <MenuItem key={section.sectionId} value={section.sectionId}>{section.sectionName === \"default\" ? \"Main\" : section.sectionName}</MenuItem>\r\n                    ))}\r\n                </TextField>\r\n           )}\r\n\r\n            <TextField\r\n                fullWidth\r\n                type={visible ? 'text' : 'password'}\r\n                label=\"Password\"\r\n                name='password'\r\n                required\r\n                value={password}\r\n                onChange={handleTextChange}\r\n                InputProps={{\r\n                endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton onClick={() => setVisible(!visible)} edge=\"end\">\r\n                            {visible ?  <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                )\r\n                }}\r\n            />\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='contained'\r\n                color='secondary'\r\n                fullWidth\r\n            >\r\n                Login\r\n            </Button>\r\n        </Stack>\r\n\r\n        <Typography variant=\"body2\" align=\"center\" sx={{ mt: 3 }}>\r\n          <Link variant=\"subtitle2\" onClick={() => navigate(\"/auth/register\")} sx={{ cursor: 'pointer' }}>\r\n            Register Account\r\n          </Link>\r\n        </Typography>\r\n      </ContentStyle>\r\n    </Container>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\"\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport Stack from '@mui/material/Stack';\r\nimport Link from '@mui/material/Link';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Button from '@mui/material/Button';\r\nimport Alert from '@mui/material/Alert';\r\n// icons\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n// api\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { BirOffices, Roles, UserAccounts } from '../../api/threads/types';\r\nimport { GET_ALL_BIR_OFFICES, GET_ALL_ROLES, USER_REGISTER } from '../../api/offices';\r\nimport { getFilteredOffices } from './LoginUser';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  maxWidth: 480,\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(12, 0)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport interface RegisterUserForm {\r\n    firstName: string;\r\n    lastName: string;\r\n    officeId: number;\r\n    sectionId: number;\r\n    roleId: number;\r\n    resetCode: string;\r\n    password: string;\r\n}\r\n\r\nexport default function RegisterUser() {\r\n  const navigate = useNavigate();\r\n  const { data: offices } = useQuery<{ getAllBirOffices: BirOffices[] }>(GET_ALL_BIR_OFFICES);\r\n  const { data: roles } = useQuery<{ getAllRoles: Roles[] }>(GET_ALL_ROLES);\r\n  const [registerUser, { data: userAccount, error }] = useMutation<{ changePassword: UserAccounts }>(USER_REGISTER);\r\n  const [visible, setVisible] = React.useState<boolean>(false);\r\n  const [showSections, setShowSections] = React.useState<boolean>(true);\r\n  const [selectedOffice, setSelectedOffice] = React.useState<BirOffices>();\r\n  const [credentials, setCredentials] = React.useState<RegisterUserForm>({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    officeId: 3,\r\n    sectionId: 3,\r\n    password: \"\",\r\n    roleId: 9,\r\n    resetCode: \"\"\r\n  })\r\n  const { firstName, lastName, officeId, sectionId, roleId, password, resetCode } = credentials;\r\n\r\n  React.useEffect(() => {\r\n    if (offices) {\r\n        const selected = offices.getAllBirOffices.find(office => office.officeId === officeId);\r\n        setSelectedOffice(selected);\r\n\r\n        if (selected && [3, 4, 5, 6].includes(roleId)) {\r\n            setShowSections(false);\r\n            setCredentials(state => ({ ...state, sectionId: selected.officeSections[0].sectionId }));\r\n        }\r\n        else if (selected && selected.officeSections.length > 1) {\r\n            setShowSections(true);\r\n            setCredentials(state => ({ ...state, sectionId: selected.officeSections[1].sectionId }));\r\n        }\r\n        else if (selected) {\r\n            setShowSections(false);\r\n            setCredentials(state => ({ ...state, sectionId: selected.officeSections[0].sectionId }));\r\n        }\r\n    }\r\n  }, [officeId, offices, roleId]);\r\n\r\n  React.useEffect(() => {\r\n    if (roleId === 1) {\r\n        setShowSections(false);\r\n        setCredentials(state => ({ ...state, sectionId: 1, officeId: 1 }));\r\n    } else if (roleId === 2) {\r\n        setShowSections(false);\r\n        setCredentials(state => ({ ...state, sectionId: 2, officeId: 2 }));\r\n    } else if (offices) {\r\n        setCredentials(state => ({ ...state, officeId: offices.getAllBirOffices.filter(office => getFilteredOffices(roleId, office.officeId))[0].officeId }));\r\n    }\r\n  }, [roleId, offices])\r\n\r\n  React.useEffect(() => {\r\n    if (userAccount) navigate(\"/auth/login\");\r\n  }, [userAccount, navigate])\r\n\r\n  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCredentials({ ...credentials, [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const handleRegisterUser = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n        await registerUser({\r\n            variables: {\r\n                data: {\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    officeId: sectionId,\r\n                    roleId: roleId,\r\n                    resetCode: resetCode,\r\n                    password: password\r\n                }\r\n            }\r\n        })\r\n    } catch (err) {}\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <ContentStyle>\r\n        <Stack sx={{ mb: 2 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n              Register Account\r\n          </Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}>Enter your credentials below.</Typography>\r\n        </Stack>\r\n        \r\n        {error && (\r\n            <Alert severity='error' sx={{ my: 2 }}>{error.message}</Alert>\r\n        )}\r\n\r\n        <Stack spacing={2} component='form' onSubmit={handleRegisterUser}>\r\n            <TextField \r\n                name='firstName'\r\n                label='First Name'\r\n                value={firstName}\r\n                onChange={handleTextChange}\r\n                fullWidth\r\n                required\r\n            />\r\n\r\n            <TextField \r\n                name='lastName'\r\n                label='Last Name'\r\n                value={lastName}\r\n                onChange={handleTextChange}\r\n                fullWidth\r\n                required\r\n            />\r\n\r\n            {roles && (\r\n                <TextField \r\n                    name='roleId'\r\n                    label='Position'\r\n                    value={roleId}\r\n                    onChange={handleTextChange}\r\n                    fullWidth\r\n                    required\r\n                    select\r\n                >\r\n                    {roles.getAllRoles.map(role => (\r\n                        <MenuItem key={role.roleId} value={role.roleId}>{role.roleName}</MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            )}\r\n\r\n            {offices && (\r\n                <TextField \r\n                    name='officeId'\r\n                    label='Office'\r\n                    value={officeId}\r\n                    onChange={handleTextChange}\r\n                    fullWidth\r\n                    required\r\n                    select\r\n                >\r\n                    {offices.getAllBirOffices.filter(office => getFilteredOffices(roleId, office.officeId)).map(office => (\r\n                        <MenuItem key={office.officeId} value={office.officeId}>{office.officeName}</MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            )}\r\n\r\n            {showSections && selectedOffice && selectedOffice.officeSections.length > 1 && (\r\n                <TextField \r\n                    name='sectionId'\r\n                    label='Section'\r\n                    value={sectionId}\r\n                    onChange={handleTextChange}\r\n                    fullWidth\r\n                    required\r\n                    select\r\n                >\r\n                    {selectedOffice.officeSections.filter(section => section.sectionName !== \"default\").map(section => (\r\n                        <MenuItem key={section.sectionId} value={section.sectionId}>{section.sectionName === \"default\" ? \"Main\" : section.sectionName}</MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            )}\r\n\r\n            <TextField \r\n                autoComplete='off'\r\n                name='resetCode'\r\n                label='Register Code'\r\n                value={resetCode}\r\n                onChange={handleTextChange}\r\n                fullWidth\r\n                required\r\n                inputProps={{ min: 6, max: 6 }}\r\n            />\r\n\r\n            <TextField\r\n                fullWidth\r\n                type={visible ? 'text' : 'password'}\r\n                label=\"Password\"\r\n                name='password'\r\n                required\r\n                value={password}\r\n                onChange={handleTextChange}\r\n                InputProps={{\r\n                endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton onClick={() => setVisible(!visible)} edge=\"end\">\r\n                            {visible ?  <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                )\r\n                }}\r\n            />\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='contained'\r\n                color='secondary'\r\n                fullWidth\r\n            >\r\n                Register\r\n            </Button>\r\n        </Stack>\r\n\r\n        <Typography variant=\"body2\" align=\"center\" sx={{ mt: 3 }}>\r\n          <Link variant=\"subtitle2\" onClick={() => navigate(\"/auth/login\")} sx={{ cursor: 'pointer' }}>\r\n            Go Back to Login\r\n          </Link>\r\n        </Typography>\r\n      </ContentStyle>\r\n    </Container>\r\n  );\r\n}\r\n\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["ContentStyle","styled","_ref","maxWidth","margin","display","minHeight","flexDirection","justifyContent","padding","theme","spacing","getFilteredOffices","roleId","officeId","includes","LoginUser","navigate","useNavigate","dispatch","useAppDispatch","offices","useQuery","GET_ALL_BIR_OFFICES","data","roles","GET_ALL_ROLES","_useMutation","useMutation","USER_LOGIN","_useMutation2","_slicedToArray","userLogin","_useMutation2$","userAccount","error","_React$useState","React","_React$useState2","selectedOffice","setSelectedOffice","_React$useState3","_React$useState4","showSections","setShowSections","_React$useState5","_React$useState6","visible","setVisible","_React$useState7","firstName","lastName","sectionId","password","_React$useState8","credentials","setCredentials","selected","getAllBirOffices","find","office","state","_objectSpread","officeSections","length","filter","login","uid","accountId","username","role","officeSection","sectionName","officers","sectionOffice","officeName","handleTextChange","event","_defineProperty","target","name","value","handleRegisterUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","variables","t0","stop","_x","apply","arguments","_jsx","Container","children","_jsxs","Stack","sx","mb","Typography","variant","gutterBottom","color","Alert","severity","my","message","component","onSubmit","TextField","label","onChange","fullWidth","required","select","getAllRoles","map","MenuItem","roleName","section","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","VisibilityOffIcon","VisibilityIcon","Button","align","mt","Link","cursor","RegisterUser","USER_REGISTER","registerUser","resetCode","autoComplete","inputProps","min","max","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","componentName","ContainerRoot","_extends","width","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","_ref3","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref4","Math","xs","ref","className","_props$component","_props$disableGutters","_props$fixed","_props$maxWidth","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","clsx","createContainer"],"sourceRoot":""}