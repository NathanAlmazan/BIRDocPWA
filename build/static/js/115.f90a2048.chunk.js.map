{"version":3,"file":"static/js/115.f90a2048.chunk.js","mappings":"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","sources":["pages/users/AddOfficeDialog.tsx","pages/users/DeleteOfficeDialog.tsx","pages/users/OfficeList.tsx","pages/users/OfficerDialog.tsx","pages/users/OfficeSectionList.tsx","pages/users/index.tsx","../node_modules/@mui/icons-material/SupervisorAccountOutlined.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import React from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n// project imports\r\nimport { LoadOverlay } from '../../components/Loaders';\r\n// api\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_BIR_OFFICE } from '../../api/offices';\r\nimport { BirOffices } from '../../api/threads/types';\r\n\r\ninterface AddOfficeDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onSubmit: () => void;\r\n}\r\n\r\nexport default function AddOfficeDialog(props: AddOfficeDialogProps) {\r\n    const [addBirOffice, { loading }] = useMutation<{ addBirOffice: BirOffices }, {\r\n        data: {\r\n            officeName: string,\r\n            officeSections?: string[]    \r\n        }\r\n    }>(ADD_BIR_OFFICE);\r\n\r\n    const [officeName, setOfficeName] = React.useState<string>(\"\");\r\n\r\n    const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => setOfficeName(event.target.value);\r\n    \r\n    const handleSubmitOffice = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        await addBirOffice({\r\n            variables: {\r\n                data: {\r\n                    officeName: officeName,\r\n                    officeSections: ['default']\r\n                }\r\n            }\r\n        })\r\n\r\n        setOfficeName(\"\");\r\n        props.onSubmit();\r\n        props.onClose();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <LoadOverlay open={loading} />\r\n            <Dialog open={props.open} onClose={props.onClose} maxWidth=\"md\">\r\n                <form onSubmit={handleSubmitOffice}>\r\n                    <DialogTitle>Add Office</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            name=\"officeName\"\r\n                            label=\"Office Name\"\r\n                            value={officeName}\r\n                            onChange={handleTextChange}\r\n                            fullWidth\r\n                            variant=\"standard\"\r\n                            required\r\n                            sx={{ width: 400 }}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={props.onClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n// project imports\r\nimport { BirOffices } from '../../api/threads/types';\r\nimport { useMutation } from '@apollo/client';\r\nimport { DELETE_BIR_OFFICE } from '../../api/offices';\r\n\r\ninterface DeleteOfficeDialogProps {\r\n    open: boolean;\r\n    office: BirOffices\r\n    onClose: () => void;\r\n    onDelete: () => void;\r\n}\r\n\r\nexport default function DeleteOfficeDialog(props: DeleteOfficeDialogProps) {\r\n    const [deleteBirOffice] = useMutation(DELETE_BIR_OFFICE);\r\n\r\n    const handleDeleteOffice = async () => {\r\n        await deleteBirOffice({\r\n            variables: {\r\n                officeId: props.office.officeId\r\n            }\r\n        })\r\n\r\n        props.onDelete();\r\n        props.onClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {props.office.officeSections.length > 0 ? \"Invalid Action\" : `Are you sure you want to delete ${props.office.officeName}?`}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {props.office.officeSections.length > 0 ? \"You cannot delete this office because it has active sections.\" : \"Please keep in mind that this action cannot be undone.\"}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            {props.office.officeSections.length === 0 ? (\r\n                <DialogActions>\r\n                    <Button onClick={props.onClose}>Cancel</Button>\r\n                    <Button color=\"error\" onClick={handleDeleteOffice} autoFocus>\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            ) : (\r\n                <DialogActions>\r\n                    <Button onClick={props.onClose}>Okay</Button>\r\n                </DialogActions>\r\n            )}\r\n        </Dialog>\r\n    )\r\n}","import React from 'react';\r\n// mui\r\nimport Paper from '@mui/material/Paper';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useTheme } from '@mui/material/styles';\r\n// icons\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\n// project imports\r\nimport AddOfficeDialog from './AddOfficeDialog';\r\nimport DeleteOfficeDialog from './DeleteOfficeDialog';\r\nimport { LoadOverlay } from '../../components/Loaders';\r\n// api\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_ALL_BIR_OFFICES } from '../../api/offices';\r\nimport { BirOffices } from '../../api/threads/types';\r\n// redux\r\nimport { useAppSelector } from '../../redux/hooks';\r\n\r\n\r\ninterface OfficeListProps {\r\n    selected: number;\r\n    onSelect: (id: number) => void;\r\n}\r\n\r\nexport default function OfficeList(props: OfficeListProps) {\r\n    const theme = useTheme();\r\n    const { role } = useAppSelector((state) => state.auth);\r\n    const { data: offices, refetch } = useQuery<{ getAllBirOffices: BirOffices[] }>(GET_ALL_BIR_OFFICES);\r\n    const [add, setAdd] = React.useState<boolean>(false);\r\n    const [selected, setSelected] = React.useState<BirOffices | null>(null);\r\n\r\n    const handleToggleDialog = () => setAdd(!add);\r\n\r\n    const handleRefresh = () => refetch();\r\n    \r\n    const handleConfirmDelete = (office: BirOffices) => setSelected(office); \r\n\r\n    if (!offices) return <LoadOverlay open={true} />\r\n\r\n    return (\r\n        <Paper sx={{ width: \"100%\", height: '100%' }}>\r\n            <Box \r\n                sx={{ \r\n                    p: 2, \r\n                    display: 'flex', \r\n                    flexDirection: 'row', \r\n                    justifyContent: 'space-between', \r\n                    alignItems: 'center'\r\n                }}\r\n            >\r\n                <Typography variant='h6'>BIR Offices</Typography>\r\n                {role && role.superuser && (\r\n                    <Button variant='contained' onClick={handleToggleDialog}>Add Office</Button>\r\n                )}\r\n            </Box>\r\n\r\n            <Divider />\r\n\r\n            <List \r\n                sx={{ \r\n                    width: '100%', \r\n                    maxHeight: 'calc(100vh - 170px)', \r\n                    overflowY: 'auto',\r\n                    \"::-webkit-scrollbar\": {\r\n                    height: \"8px\",\r\n                    width: \"8px\"\r\n                    },\r\n\r\n                    /* Track */\r\n                    \"::-webkit-scrollbar-track\": {\r\n                        background: theme.palette.grey[300] \r\n                    },\r\n                    \r\n                    /* Handle */\r\n                    \"::-webkit-scrollbar-thumb\": {\r\n                        background: theme.palette.secondary.dark\r\n                    },\r\n                    \r\n                    /* Handle on hover */\r\n                    \"::-webkit-scrollbar-thumb:hover\": {\r\n                        background: theme.palette.primary.dark\r\n                    }\r\n                }}>\r\n\r\n                {offices.getAllBirOffices.length === 0 && (\r\n                     <Box sx={{ display: 'flex', height: 300, justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n                        <BusinessIcon color='secondary' sx={{ fontSize: 64, mb: 1 }} />\r\n                        <Typography variant=\"subtitle1\">\r\n                            No Office Yet\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Create an office\r\n                        </Typography>\r\n                    </Box>\r\n                )}\r\n\r\n                {offices.getAllBirOffices.map(office => (\r\n                    <ListItem key={office.officeId} secondaryAction={role && role.superuser && (\r\n                        <IconButton onClick={() => handleConfirmDelete(office)}>\r\n                            <DeleteOutlineOutlinedIcon color='error' fontSize='small' />\r\n                        </IconButton>\r\n                    )}>\r\n                        <ListItemButton \r\n                            alignItems=\"flex-start\" \r\n                            selected={office.officeId === props.selected}\r\n                            onClick={() => props.onSelect(office.officeId)}\r\n                        >\r\n                            <ListItemText\r\n                                primary={\r\n                                    <Box>\r\n                                        <Typography variant='body1'>\r\n                                            {office.officeName}\r\n                                        </Typography>\r\n                                        <Typography variant='caption' gutterBottom>\r\n                                            Sample Code\r\n                                        </Typography>\r\n                                    </Box>\r\n                                }\r\n                            />\r\n                        </ListItemButton>\r\n                        <Divider />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n\r\n            <AddOfficeDialog open={add} onClose={handleToggleDialog} onSubmit={handleRefresh} />\r\n\r\n            {selected && (\r\n                <DeleteOfficeDialog open={selected !== null} office={selected} onClose={() => setSelected(null)} onDelete={handleRefresh} />\r\n            )}\r\n        </Paper>\r\n    )   \r\n}","import React from 'react';\r\n// mui\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n// icons\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\n// api\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { BirOffices, OfficeSections, Roles, UserAccounts } from '../../api/threads/types';\r\nimport { DELETE_OFFICER, GET_ALL_ROLES, REGISTER_OFFICER, UPDATE_OFFICER } from '../../api/offices';\r\n\r\ninterface AccountRegister {\r\n    accountId: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    roleId: number;\r\n    resetCode: string | null;\r\n    officeId: number;\r\n}\r\n\r\ninterface AddOfficerDrawerProps {\r\n    open: boolean;\r\n    section: OfficeSections;\r\n    office: BirOffices;\r\n    officer: UserAccounts | null;\r\n    onClose: () => void;\r\n    onSubmit: () => void;\r\n}\r\n\r\nexport default function OfficerDrawer(props: AddOfficerDrawerProps) {\r\n    const { data: roles } = useQuery<{ getAllRoles: Roles[] }>(GET_ALL_ROLES);\r\n    const [registerOfficer] = useMutation(REGISTER_OFFICER);\r\n    const [updateOfficer] = useMutation(UPDATE_OFFICER);\r\n    const [deleteOfficer] = useMutation(DELETE_OFFICER);\r\n    const [formData, setFormData] = React.useState<AccountRegister>({\r\n        accountId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        officeId: props.section.sectionId,\r\n        roleId: 9,\r\n        resetCode: null\r\n    })\r\n    const { firstName, lastName, roleId, resetCode, officeId, accountId } = formData;\r\n\r\n    React.useEffect(() => {\r\n        if (props.officer) {\r\n            setFormData({\r\n                accountId: props.officer.accountId,\r\n                firstName: props.officer.firstName,\r\n                lastName: props.officer.lastName,\r\n                officeId: props.section.sectionId,\r\n                roleId: props.officer.role.roleId,\r\n                resetCode: props.officer.resetCode\r\n            })\r\n        }\r\n    }, [props.officer, props.section])\r\n\r\n    const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const handleSubmitOfficer = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        await registerOfficer({\r\n            variables: {\r\n                data: {\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    officeId: officeId,\r\n                    roleId: roleId\r\n                }\r\n            }\r\n        })\r\n\r\n        setFormData({\r\n            accountId: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            officeId: props.section.sectionId,\r\n            roleId: 9,\r\n            resetCode: null\r\n        })\r\n\r\n        props.onSubmit();\r\n        props.onClose();\r\n    }\r\n\r\n    const handleUpdateOfficer = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        await updateOfficer({\r\n            variables: {\r\n                data: {\r\n                    accountId: accountId,\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    roleId: roleId\r\n                }\r\n            }\r\n        })\r\n\r\n        setFormData({\r\n            accountId: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            officeId: props.section.sectionId,\r\n            roleId: 9,\r\n            resetCode: null\r\n        })\r\n\r\n        props.onSubmit();\r\n        props.onClose();\r\n    }\r\n\r\n    const handleDeleteOfficer = async () => {\r\n        await deleteOfficer({\r\n            variables: {\r\n                accountId: accountId\r\n            }\r\n        })\r\n\r\n        setFormData({\r\n            accountId: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            officeId: props.section.sectionId,\r\n            roleId: 9,\r\n            resetCode: null\r\n        })\r\n\r\n        props.onSubmit();\r\n        props.onClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onClose} maxWidth='md'>\r\n            <DialogTitle>\r\n                <Stack direction='row' justifyContent='space-between'>\r\n                    <Typography variant='h6'>\r\n                        {props.officer ? \"Update Officer\" : \"Register Officer\"}\r\n                    </Typography>\r\n                    \r\n                    {props.officer && (\r\n                        <IconButton color='error' onClick={handleDeleteOfficer}>\r\n                            <DeleteOutlineOutlinedIcon />\r\n                        </IconButton>\r\n                    )}\r\n                </Stack>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Stack component='form' onSubmit={props.officer ? handleUpdateOfficer : handleSubmitOfficer} spacing={3} sx={{ width: 500, mt: 2 }}>\r\n                    <TextField \r\n                        name='firstName'\r\n                        label='First Name'\r\n                        value={firstName}\r\n                        onChange={handleTextChange}\r\n                        required\r\n                    />\r\n\r\n                    <TextField \r\n                        name='lastName'\r\n                        label='Last Name'\r\n                        value={lastName}\r\n                        onChange={handleTextChange}\r\n                        required\r\n                    />\r\n\r\n                    <TextField \r\n                        name='Office'\r\n                        label='Office'\r\n                        value={props.office.officeName}\r\n                        required\r\n                    />\r\n\r\n                    {props.section.sectionName !== \"default\" && (\r\n                        <TextField \r\n                            name='section'\r\n                            label='Section'\r\n                            value={props.section.sectionName}\r\n                            required\r\n                        />\r\n                    )}\r\n\r\n                    {roles && (\r\n                        <TextField \r\n                            name='roleId'\r\n                            label='Position'\r\n                            value={roleId}\r\n                            onChange={handleTextChange}\r\n                            fullWidth\r\n                            required\r\n                            select\r\n                        >\r\n                            {roles.getAllRoles.map(role => (\r\n                                <MenuItem key={role.roleId} value={role.roleId}>{role.roleName}</MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    )}\r\n\r\n                    {resetCode && (\r\n                        <TextField \r\n                            name='resetCode'\r\n                            label='Reset Code'\r\n                            value={resetCode}\r\n                        />\r\n                    )}\r\n                 \r\n\r\n                    <Stack spacing={1}>\r\n                        <Button \r\n                            type='submit'\r\n                            variant='contained'\r\n                            fullWidth\r\n                        >\r\n                            {props.officer ? \"Update\" : \"Register\"}\r\n                        </Button>\r\n\r\n                        <Button \r\n                            variant='outlined'\r\n                            onClick={props.onClose}\r\n                            fullWidth\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </Stack>\r\n\r\n                </Stack>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}","import React from 'react';\r\n// mui\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Divider from '@mui/material/Divider';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Button from '@mui/material/Button';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Grid from '@mui/material/Grid';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { BirOffices, OfficeSections, Roles, UserAccounts } from '../../api/threads/types';\r\n// icons\r\nimport SupervisorAccountOutlinedIcon from '@mui/icons-material/SupervisorAccountOutlined';\r\n// api\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_BIR_OFFICE_BY_ID } from '../../api/offices';\r\nimport { LoadOverlay } from '../../components/Loaders';\r\n// project imports\r\nimport AddOfficerDrawer from './OfficerDialog';\r\nimport { useAppSelector } from '../../redux/hooks';\r\n\r\n\r\ninterface OfficeSectionListProps {\r\n    officeId: number;\r\n}\r\n\r\nconst isAuthorized = (role: Roles | null, office: OfficeSections | null, sectionId: number, officeId: number): boolean => {\r\n    if (!role || !office) return false;\r\n    else if (role.superuser) return true;\r\n    else if (role.roleName === \"Section Chief\" && office.sectionId === sectionId) return true;\r\n    else if ((role.roleName === \"Revenue District Officer\" || role.roleName === \"Asst. Revenue District Officer\") && office.sectionOffice.officeId === officeId) return true;\r\n    else if ((role.roleName === \"Division Chief\" || role.roleName === \"Asst. Division Chief\") && office.sectionOffice.officeId === officeId) return true;\r\n\r\n    return false;\r\n}\r\n\r\nexport default function OfficeSectionList(props: OfficeSectionListProps) {\r\n    const theme = useTheme();\r\n    const { role, office: userOffice } = useAppSelector((state) => state.auth);\r\n    const { data: office, loading, refetch } = useQuery<{ getBirOfficeById: BirOffices }>(GET_BIR_OFFICE_BY_ID, { variables: {\r\n        officeId: props.officeId\r\n    }});\r\n    const [selectedSection, setSelectedSection] = React.useState<OfficeSections | null>(null);\r\n    const [selectedUser, setSelectedUser] = React.useState<UserAccounts | null>(null);\r\n\r\n    if (!office) return <LoadOverlay open={loading} />\r\n\r\n    const reloadList = () => refetch({ officeId: props.officeId });\r\n\r\n    const handleSelectUser = (user: UserAccounts, section: OfficeSections) => {\r\n        setSelectedSection(section);\r\n        setSelectedUser(user);\r\n    } \r\n\r\n    const handleCloseOfficerDialog = () => {\r\n        setSelectedSection(null);\r\n        setSelectedUser(null);\r\n    }\r\n\r\n    return (\r\n        <Paper sx={{ width: \"100%\", height: '100%' }}>\r\n            <Box \r\n                sx={{ \r\n                    p: 2, \r\n                    display: 'flex', \r\n                    flexDirection: 'row', \r\n                    alignItems: 'center'\r\n                }}\r\n            >\r\n                <Typography variant='h6'>{`${office.getBirOfficeById.officeName} Sections`}</Typography>\r\n            </Box>\r\n\r\n            <Divider />\r\n\r\n            <Grid \r\n                container   \r\n                spacing={3} \r\n                alignItems=\"stretch\" \r\n                sx={{ \r\n                    mt: 1,\r\n                    px: 2,\r\n                    pb: 2,\r\n                    width: '100%',\r\n                    maxHeight: 'calc(100vh - 170px)', \r\n                    overflowY: 'auto',\r\n                    \"::-webkit-scrollbar\": {\r\n                    height: \"8px\",\r\n                    width: \"8px\"\r\n                    },\r\n\r\n                    /* Track */\r\n                    \"::-webkit-scrollbar-track\": {\r\n                        background: theme.palette.grey[300] \r\n                    },\r\n                    \r\n                    /* Handle */\r\n                    \"::-webkit-scrollbar-thumb\": {\r\n                        background: theme.palette.secondary.dark\r\n                    },\r\n                    \r\n                    /* Handle on hover */\r\n                    \"::-webkit-scrollbar-thumb:hover\": {\r\n                        background: theme.palette.primary.dark\r\n                    }\r\n                }}>\r\n                \r\n                {office.getBirOfficeById.officeSections.filter((o, index, arr) => o.sectionName !== \"default\" || arr.length === 1).map(section => (\r\n                    <Grid item md={6} key={section.sectionId}>\r\n                        <Card sx={{ width: '100%', height: '100%' }}>\r\n                            {isAuthorized(role, userOffice, section.sectionId, section.sectionOffice.officeId) ? (\r\n                                <CardHeader \r\n                                    title={section.sectionName === 'default' ? 'Main' : section.sectionName}\r\n                                    action={\r\n                                        <Button variant='contained' sx={{ ml: 2 }} onClick={() => setSelectedSection(section)}>\r\n                                            Register\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n                            ) : (\r\n                                <CardHeader title={section.sectionName === 'default' ? 'Main' : section.sectionName} />\r\n                            )}\r\n                            <CardContent>\r\n                                <Divider />\r\n                                {section.officers.length === 0 && (\r\n                                    <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n                                        <SupervisorAccountOutlinedIcon color='secondary' sx={{ fontSize: 48, my: 1 }} />\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            No Officer Registered\r\n                                        </Typography>\r\n                                        {isAuthorized(role, userOffice, section.sectionId, section.sectionOffice.officeId) && (\r\n                                            <Typography variant=\"body1\">\r\n                                                Click Register to Add Officers\r\n                                            </Typography>\r\n                                        )}\r\n                                    </Box>\r\n                                )}\r\n                                <List>\r\n                                    {section.officers.map(officer => (\r\n                                        <React.Fragment key={officer.accountId}>\r\n                                            <ListItemButton alignItems=\"flex-start\" onClick={\r\n                                                isAuthorized(role, userOffice, section.sectionId, section.sectionOffice.officeId) ? \r\n                                                    () => handleSelectUser(officer, section) : undefined}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar>\r\n                                                        {`${officer.firstName.charAt(0)}${officer.lastName.charAt(0)}`}\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={\r\n                                                        <Box>\r\n                                                            <Typography variant='body1'>\r\n                                                                {officer.firstName + ' ' + officer.lastName}\r\n                                                            </Typography>\r\n                                                            <Typography variant='caption' gutterBottom>\r\n                                                                {officer.role.roleName}\r\n                                                            </Typography>\r\n                                                        </Box>\r\n                                                    }\r\n                                                />\r\n                                            </ListItemButton>\r\n                                            <Divider variant=\"inset\" component=\"li\" />\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                </List>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n\r\n                {selectedSection && (\r\n                    <AddOfficerDrawer \r\n                        open={selectedSection !== null}  \r\n                        section={selectedSection}\r\n                        officer={selectedUser}\r\n                        office={office.getBirOfficeById}\r\n                        onClose={handleCloseOfficerDialog}\r\n                        onSubmit={reloadList}\r\n                    />\r\n                )}\r\n            </Grid> \r\n        </Paper>\r\n    )\r\n}","import React from 'react';\r\n// mui\r\nimport Grid from '@mui/material/Grid';\r\n// project imports\r\nimport OfficeList from './OfficeList';\r\nimport OfficeSectionList from './OfficeSectionList';\r\n\r\nexport default function UsersPage() {\r\n    const [selectedOffice, setSelectedOffice] = React.useState<number>(1);\r\n\r\n    const handleSelectedOfficeChange = (officeId: number) => setSelectedOffice(officeId);\r\n\r\n    return (\r\n        <Grid container spacing={3} alignItems=\"stretch\" sx={{ height: \"95%\" }}>\r\n            <Grid item md={4}>\r\n                <OfficeList selected={selectedOffice} onSelect={handleSelectedOfficeChange} />\r\n            </Grid>\r\n            <Grid item md={8}>\r\n                <OfficeSectionList officeId={selectedOffice} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 12c1.93 0 3.5-1.57 3.5-3.5S10.93 5 9 5 5.5 6.57 5.5 8.5 7.07 12 9 12zm0-5c.83 0 1.5.67 1.5 1.5S9.83 10 9 10s-1.5-.67-1.5-1.5S8.17 7 9 7zm.05 10H4.77c.99-.5 2.7-1 4.23-1 .11 0 .23.01.34.01.34-.73.93-1.33 1.64-1.81-.73-.13-1.42-.2-1.98-.2-2.34 0-7 1.17-7 3.5V19h7v-1.5c0-.17.02-.34.05-.5zm7.45-2.5c-1.84 0-5.5 1.01-5.5 3V19h11v-1.5c0-1.99-3.66-3-5.5-3zm1.21-1.82c.76-.43 1.29-1.24 1.29-2.18C19 9.12 17.88 8 16.5 8S14 9.12 14 10.5c0 .94.53 1.75 1.29 2.18.36.2.77.32 1.21.32s.85-.12 1.21-.32z\"\n}), 'SupervisorAccountOutlined');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["AddOfficeDialog","props","_useMutation","useMutation","ADD_BIR_OFFICE","_useMutation2","_slicedToArray","addBirOffice","loading","_React$useState","React","_React$useState2","officeName","setOfficeName","handleSubmitOffice","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","preventDefault","variables","data","officeSections","onSubmit","onClose","stop","_x","apply","arguments","_jsxs","children","_jsx","LoadOverlay","open","Dialog","maxWidth","DialogTitle","DialogContent","TextField","autoFocus","margin","name","label","value","onChange","target","fullWidth","variant","required","sx","width","DialogActions","Button","onClick","type","DeleteOfficeDialog","DELETE_BIR_OFFICE","deleteBirOffice","handleDeleteOffice","officeId","office","onDelete","id","length","concat","DialogContentText","color","OfficeList","theme","useTheme","role","useAppSelector","state","auth","_useQuery","useQuery","GET_ALL_BIR_OFFICES","offices","refetch","add","setAdd","_React$useState3","_React$useState4","selected","setSelected","handleToggleDialog","handleRefresh","Paper","height","Box","p","display","flexDirection","justifyContent","alignItems","Typography","superuser","Divider","List","maxHeight","overflowY","background","palette","grey","secondary","dark","primary","getAllBirOffices","BusinessIcon","fontSize","mb","map","ListItem","secondaryAction","IconButton","handleConfirmDelete","DeleteOutlineOutlinedIcon","ListItemButton","onSelect","ListItemText","gutterBottom","OfficerDrawer","roles","GET_ALL_ROLES","REGISTER_OFFICER","registerOfficer","_useMutation3","UPDATE_OFFICER","updateOfficer","_useMutation5","DELETE_OFFICER","deleteOfficer","accountId","firstName","lastName","section","sectionId","roleId","resetCode","formData","setFormData","officer","handleTextChange","_objectSpread","_defineProperty","handleSubmitOfficer","handleUpdateOfficer","_ref2","_callee2","_context2","_x2","handleDeleteOfficer","_ref3","_callee3","_context3","Stack","direction","component","spacing","mt","sectionName","select","getAllRoles","MenuItem","roleName","isAuthorized","sectionOffice","OfficeSectionList","_useAppSelector","userOffice","GET_BIR_OFFICE_BY_ID","selectedSection","setSelectedSection","selectedUser","setSelectedUser","getBirOfficeById","Grid","container","px","pb","filter","o","index","arr","item","md","Card","CardHeader","title","action","ml","CardContent","officers","SupervisorAccountOutlinedIcon","my","user","handleSelectUser","undefined","ListItemAvatar","Avatar","charAt","AddOfficerDrawer","UsersPage","selectedOffice","setSelectedOffice","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","styles","root","padding","paddingBottom","inProps","ref","useThemeProps","className","_props$component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardHeaderUtilityClass","CardHeaderRoot","_extends2","cardHeaderClasses","subheader","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","_props$disableTypogra","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","getCardUtilityClass","CardRoot","overflow","_props$raised","raised","elevation"],"sourceRoot":""}