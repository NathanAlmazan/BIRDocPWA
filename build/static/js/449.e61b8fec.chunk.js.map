{"version":3,"file":"static/js/449.e61b8fec.chunk.js","mappings":"oSAkBe,SAASA,IACtB,IAAQC,GAAUC,EAAAA,EAAAA,MAAVD,MACAE,GAAQC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAA5CH,IACRI,GAA0BC,EAAAA,EAAAA,GAAqCC,EAAAA,GAAkB,CAC/EC,UAAW,CACTC,OAAO,KAFHC,EAAIL,EAAJK,KAAMC,EAAON,EAAPM,QAKdC,EAAgCC,EAAAA,SAA8Bd,GAAgB,MAAKe,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5EI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,EAA8BL,EAAAA,UAAwB,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArDE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,EAAsB,WAAH,OAASD,GAAYD,EAAS,EAavD,OACEG,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,WAAW,UAAUC,GAAI,CAAEC,OAAQ,OAAQC,SAAA,EACrEC,EAAAA,EAAAA,KAACP,EAAAA,GAAI,CAACQ,MAAI,EAACC,GAAI,EAAEH,UACfC,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACRC,MAAW,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,aACbhB,QAASA,EACTiB,KAAK,QACLC,UAXkB,WACxB3B,EAAQ,CAAE4B,OAAQtC,GACpB,EAUQuC,gBAAiBlB,EACjBmB,cApBkB,SAACC,GAAU,OAAKzB,EAAYyB,EAAI,OAuBtDX,EAAAA,EAAAA,KAACP,EAAAA,GAAI,CAACQ,MAAI,EAACC,GAAI,EAAGL,GAAI,CAAEe,SAAU,YAAab,SAC5CV,GACCW,EAAAA,EAAAA,KAACa,EAAAA,EAAY,CACXL,OAAQtC,EACR4C,gBAAiBvB,EACjBwB,eA1BiB,SAACJ,GAC1BzB,EAAYyB,GACZrB,GAAW,EACb,IAyBUL,GACFe,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CACTR,OAAQtC,EACRe,SAAUA,KAGZO,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAACpB,GAAI,CAAEqB,QAAS,OAAQpB,OAAQ,OAAQqB,eAAgB,SAAUvB,WAAY,SAAUwB,cAAe,UAAWrB,SAAA,EACpHC,EAAAA,EAAAA,KAACqB,EAAAA,EAAgB,CAACC,MAAM,YAAYzB,GAAI,CAAE0B,SAAU,GAAIC,GAAI,MAC5DxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACC,QAAQ,YAAW3B,SAAC,4BAGhCC,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACC,QAAQ,QAAO3B,SAAC,4BAQxC,C","sources":["pages/threads/RegionInbox.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n// mui\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n//icons\r\nimport MarkAsUnreadIcon from '@mui/icons-material/MarkAsUnread';\r\n// project imports\r\nimport EmailList from './EmailList';\r\nimport ThreadList from './ThreadList';\r\nimport CreateThread from './CreateThread';\r\nimport { useAppSelector } from '../../redux/hooks';\r\n// api\r\nimport { GET_REGION_INBOX } from '../../api/threads';\r\nimport { Thread } from '../../api/threads/types';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nexport default function RegionInbox() {\r\n  const { refId } = useParams();\r\n  const { uid } = useAppSelector((state) => state.auth);\r\n  const { data, refetch } = useQuery<{ getAllThread: Thread[] }>(GET_REGION_INBOX, {\r\n    variables: {\r\n      memos: false\r\n    }\r\n  });\r\n  const [threadId, setThreadId] = React.useState<string | null>(refId ? refId : null);\r\n  const [compose, setCompose] = React.useState<boolean>(false);\r\n\r\n  const handleComposeThread = () => setCompose(!compose);\r\n\r\n  const handleThreadClick = (id: string) => setThreadId(id);\r\n\r\n  const handleCreateThread = (id: string) => {\r\n    setThreadId(id);\r\n    setCompose(false)\r\n  }\r\n\r\n  const handleRefreshList = () => {\r\n    refetch({ userId: uid });\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"stretch\" sx={{ height: \"95%\" }}>\r\n      <Grid item md={4}>\r\n        <EmailList \r\n          mails={data?.getAllThread}\r\n          compose={compose}\r\n          mode=\"inbox\"\r\n          onRefresh={handleRefreshList}\r\n          onComposeThread={handleComposeThread}\r\n          onThreadClick={handleThreadClick}\r\n        />\r\n      </Grid>\r\n      <Grid item md={8} sx={{ position: 'relative' }}>\r\n        {compose ? (\r\n          <CreateThread \r\n            userId={uid as string}\r\n            onDiscardThread={handleComposeThread}\r\n            onCreateThread={handleCreateThread}\r\n          />\r\n        ) : threadId ? (\r\n          <ThreadList \r\n            userId={uid as string}\r\n            threadId={threadId}\r\n          />\r\n        ) : (\r\n          <Box sx={{ display: 'flex', height: '100%', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n            <MarkAsUnreadIcon color='secondary' sx={{ fontSize: 64, mb: 1 }} />\r\n            <Typography variant=\"subtitle1\">\r\n                Select an item to read\r\n            </Typography>\r\n            <Typography variant=\"body1\">\r\n                No item selected\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}"],"names":["RegionInbox","refId","useParams","uid","useAppSelector","state","auth","_useQuery","useQuery","GET_REGION_INBOX","variables","memos","data","refetch","_React$useState","React","_React$useState2","_slicedToArray","threadId","setThreadId","_React$useState3","_React$useState4","compose","setCompose","handleComposeThread","_jsxs","Grid","container","spacing","alignItems","sx","height","children","_jsx","item","md","EmailList","mails","getAllThread","mode","onRefresh","userId","onComposeThread","onThreadClick","id","position","CreateThread","onDiscardThread","onCreateThread","ThreadList","Box","display","justifyContent","flexDirection","MarkAsUnreadIcon","color","fontSize","mb","Typography","variant"],"sourceRoot":""}