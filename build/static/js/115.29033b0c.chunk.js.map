{"version":3,"file":"static/js/115.29033b0c.chunk.js","mappings":"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","sources":["pages/users/AddOfficeDialog.tsx","pages/users/DeleteOfficeDialog.tsx","pages/users/OfficeList.tsx","pages/users/OfficerDialog.tsx","pages/users/OfficeSectionList.tsx","pages/users/index.tsx","../node_modules/@mui/icons-material/SupervisorAccountOutlined.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import React from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n// project imports\r\nimport { LoadOverlay } from '../../components/Loaders';\r\n// api\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_BIR_OFFICE } from '../../api/offices';\r\nimport { BirOffices } from '../../api/threads/types';\r\n\r\ninterface AddOfficeDialogProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onSubmit: () => void;\r\n}\r\n\r\nexport default function AddOfficeDialog(props: AddOfficeDialogProps) {\r\n    const [addBirOffice, { loading }] = useMutation<{ addBirOffice: BirOffices }, {\r\n        data: {\r\n            officeName: string,\r\n            officeSections?: string[]    \r\n        }\r\n    }>(ADD_BIR_OFFICE);\r\n\r\n    const [officeName, setOfficeName] = React.useState<string>(\"\");\r\n\r\n    const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => setOfficeName(event.target.value);\r\n    \r\n    const handleSubmitOffice = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        await addBirOffice({\r\n            variables: {\r\n                data: {\r\n                    officeName: officeName,\r\n                    officeSections: ['default']\r\n                }\r\n            }\r\n        })\r\n\r\n        setOfficeName(\"\");\r\n        props.onSubmit();\r\n        props.onClose();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <LoadOverlay open={loading} />\r\n            <Dialog open={props.open} onClose={props.onClose} maxWidth=\"md\">\r\n                <form onSubmit={handleSubmitOffice}>\r\n                    <DialogTitle>Add Office</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            name=\"officeName\"\r\n                            label=\"Office Name\"\r\n                            value={officeName}\r\n                            onChange={handleTextChange}\r\n                            fullWidth\r\n                            variant=\"standard\"\r\n                            required\r\n                            sx={{ width: 400 }}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={props.onClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n// project imports\r\nimport { BirOffices } from '../../api/threads/types';\r\nimport { useMutation } from '@apollo/client';\r\nimport { DELETE_BIR_OFFICE } from '../../api/offices';\r\n\r\ninterface DeleteOfficeDialogProps {\r\n    open: boolean;\r\n    office: BirOffices\r\n    onClose: () => void;\r\n    onDelete: () => void;\r\n}\r\n\r\nexport default function DeleteOfficeDialog(props: DeleteOfficeDialogProps) {\r\n    const [deleteBirOffice] = useMutation(DELETE_BIR_OFFICE);\r\n\r\n    const handleDeleteOffice = async () => {\r\n        await deleteBirOffice({\r\n            variables: {\r\n                officeId: props.office.officeId\r\n            }\r\n        })\r\n\r\n        props.onDelete();\r\n        props.onClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {props.office.officeSections.length > 0 ? \"Invalid Action\" : `Are you sure you want to delete ${props.office.officeName}?`}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {props.office.officeSections.length > 0 ? \"You cannot delete this office because it has active sections.\" : \"Please keep in mind that this action cannot be undone.\"}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            {props.office.officeSections.length === 0 ? (\r\n                <DialogActions>\r\n                    <Button onClick={props.onClose}>Cancel</Button>\r\n                    <Button color=\"error\" onClick={handleDeleteOffice} autoFocus>\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            ) : (\r\n                <DialogActions>\r\n                    <Button onClick={props.onClose}>Okay</Button>\r\n                </DialogActions>\r\n            )}\r\n        </Dialog>\r\n    )\r\n}","import React from 'react';\r\n// mui\r\nimport Paper from '@mui/material/Paper';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useTheme } from '@mui/material/styles';\r\n// icons\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\n// project imports\r\nimport AddOfficeDialog from './AddOfficeDialog';\r\nimport DeleteOfficeDialog from './DeleteOfficeDialog';\r\nimport { LoadOverlay } from '../../components/Loaders';\r\n// api\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_ALL_BIR_OFFICES } from '../../api/offices';\r\nimport { BirOffices } from '../../api/threads/types';\r\n\r\n\r\ninterface OfficeListProps {\r\n    selected: number;\r\n    onSelect: (id: number) => void;\r\n}\r\n\r\nexport default function OfficeList(props: OfficeListProps) {\r\n    const theme = useTheme();\r\n    const { data: offices, refetch } = useQuery<{ getAllBirOffices: BirOffices[] }>(GET_ALL_BIR_OFFICES);\r\n    const [add, setAdd] = React.useState<boolean>(false);\r\n    const [selected, setSelected] = React.useState<BirOffices | null>(null);\r\n\r\n    const handleToggleDialog = () => setAdd(!add);\r\n\r\n    const handleRefresh = () => refetch();\r\n    \r\n    const handleConfirmDelete = (office: BirOffices) => setSelected(office); \r\n\r\n    if (!offices) return <LoadOverlay open={true} />\r\n\r\n    return (\r\n        <Paper sx={{ width: \"100%\", height: '100%' }}>\r\n            <Box \r\n                sx={{ \r\n                    p: 2, \r\n                    display: 'flex', \r\n                    flexDirection: 'row', \r\n                    justifyContent: 'space-between', \r\n                    alignItems: 'center'\r\n                }}\r\n            >\r\n                <Typography variant='h6'>BIR Offices</Typography>\r\n                <Button variant='contained' onClick={handleToggleDialog}>Add Office</Button>\r\n            </Box>\r\n\r\n            <Divider />\r\n\r\n            <List \r\n                sx={{ \r\n                    width: '100%', \r\n                    maxHeight: 'calc(100vh - 170px)', \r\n                    overflowY: 'auto',\r\n                    \"::-webkit-scrollbar\": {\r\n                    height: \"8px\",\r\n                    width: \"8px\"\r\n                    },\r\n\r\n                    /* Track */\r\n                    \"::-webkit-scrollbar-track\": {\r\n                        background: theme.palette.grey[300] \r\n                    },\r\n                    \r\n                    /* Handle */\r\n                    \"::-webkit-scrollbar-thumb\": {\r\n                        background: theme.palette.secondary.dark\r\n                    },\r\n                    \r\n                    /* Handle on hover */\r\n                    \"::-webkit-scrollbar-thumb:hover\": {\r\n                        background: theme.palette.primary.dark\r\n                    }\r\n                }}>\r\n\r\n                {offices.getAllBirOffices.length === 0 && (\r\n                     <Box sx={{ display: 'flex', height: 300, justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n                        <BusinessIcon color='secondary' sx={{ fontSize: 64, mb: 1 }} />\r\n                        <Typography variant=\"subtitle1\">\r\n                            No Office Yet\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Create an office\r\n                        </Typography>\r\n                    </Box>\r\n                )}\r\n\r\n                {offices.getAllBirOffices.map(office => (\r\n                    <ListItem key={office.officeId} secondaryAction={\r\n                        <IconButton onClick={() => handleConfirmDelete(office)}>\r\n                            <DeleteOutlineOutlinedIcon color='error' fontSize='small' />\r\n                        </IconButton>\r\n                    }>\r\n                        <ListItemButton \r\n                            alignItems=\"flex-start\" \r\n                            selected={office.officeId === props.selected}\r\n                            onClick={() => props.onSelect(office.officeId)}\r\n                        >\r\n                            <ListItemText\r\n                                primary={\r\n                                    <Box>\r\n                                        <Typography variant='body1'>\r\n                                            {office.officeName}\r\n                                        </Typography>\r\n                                        <Typography variant='caption' gutterBottom>\r\n                                            Sample Code\r\n                                        </Typography>\r\n                                    </Box>\r\n                                }\r\n                            />\r\n                        </ListItemButton>\r\n                        <Divider />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n\r\n            <AddOfficeDialog open={add} onClose={handleToggleDialog} onSubmit={handleRefresh} />\r\n\r\n            {selected && (\r\n                <DeleteOfficeDialog open={selected !== null} office={selected} onClose={() => setSelected(null)} onDelete={handleRefresh} />\r\n            )}\r\n        </Paper>\r\n    )   \r\n}","import React from 'react';\r\n// mui\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\n// icons\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\n// api\r\nimport { useMutation } from '@apollo/client';\r\nimport { BirOffices, OfficeSections, UserAccounts } from '../../api/threads/types';\r\nimport { DELETE_OFFICER, REGISTER_OFFICER, UPDATE_OFFICER } from '../../api/offices';\r\n\r\ninterface AccountRegister {\r\n    accountId: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    position: string;\r\n    resetCode: string | null;\r\n    officeId: number;\r\n}\r\n\r\ninterface AddOfficerDrawerProps {\r\n    open: boolean;\r\n    section: OfficeSections;\r\n    office: BirOffices;\r\n    officer: UserAccounts | null;\r\n    onClose: () => void;\r\n    onSubmit: () => void;\r\n}\r\n\r\nexport default function OfficerDrawer(props: AddOfficerDrawerProps) {\r\n    const [registerOfficer] = useMutation(REGISTER_OFFICER);\r\n    const [updateOfficer] = useMutation(UPDATE_OFFICER);\r\n    const [deleteOfficer] = useMutation(DELETE_OFFICER);\r\n    const [formData, setFormData] = React.useState<AccountRegister>({\r\n        accountId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        officeId: props.section.sectionId,\r\n        position: '',\r\n        resetCode: null\r\n    })\r\n    const { firstName, lastName, position, resetCode, officeId, accountId } = formData;\r\n\r\n    React.useEffect(() => {\r\n        if (props.officer) {\r\n            setFormData({\r\n                accountId: props.officer.accountId,\r\n                firstName: props.officer.firstName,\r\n                lastName: props.officer.lastName,\r\n                officeId: props.section.sectionId,\r\n                position: props.officer.position,\r\n                resetCode: props.officer.resetCode\r\n            })\r\n        }\r\n    }, [props.officer, props.section])\r\n\r\n    const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const handleSubmitOfficer = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        await registerOfficer({\r\n            variables: {\r\n                data: {\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    officeId: officeId,\r\n                    position: position\r\n                }\r\n            }\r\n        })\r\n\r\n        setFormData({\r\n            accountId: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            officeId: props.section.sectionId,\r\n            position: '',\r\n            resetCode: null\r\n        })\r\n\r\n        props.onSubmit();\r\n        props.onClose();\r\n    }\r\n\r\n    const handleUpdateOfficer = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        await updateOfficer({\r\n            variables: {\r\n                data: {\r\n                    accountId: accountId,\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    position: position\r\n                }\r\n            }\r\n        })\r\n\r\n        setFormData({\r\n            accountId: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            officeId: props.section.sectionId,\r\n            position: '',\r\n            resetCode: null\r\n        })\r\n\r\n        props.onSubmit();\r\n        props.onClose();\r\n    }\r\n\r\n    const handleDeleteOfficer = async () => {\r\n        await deleteOfficer({\r\n            variables: {\r\n                accountId: accountId\r\n            }\r\n        })\r\n\r\n        setFormData({\r\n            accountId: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            officeId: props.section.sectionId,\r\n            position: '',\r\n            resetCode: null\r\n        })\r\n\r\n        props.onSubmit();\r\n        props.onClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onClose} maxWidth='md'>\r\n            <DialogTitle>\r\n                <Stack direction='row' justifyContent='space-between'>\r\n                    <Typography variant='h6'>\r\n                        {props.officer ? \"Update Officer\" : \"Register Officer\"}\r\n                    </Typography>\r\n                    \r\n                    {props.officer && (\r\n                        <IconButton color='error' onClick={handleDeleteOfficer}>\r\n                            <DeleteOutlineOutlinedIcon />\r\n                        </IconButton>\r\n                    )}\r\n                </Stack>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Stack component='form' onSubmit={props.officer ? handleUpdateOfficer : handleSubmitOfficer} spacing={3} sx={{ width: 500, mt: 2 }}>\r\n                    <TextField \r\n                        name='firstName'\r\n                        label='First Name'\r\n                        value={firstName}\r\n                        onChange={handleTextChange}\r\n                        required\r\n                    />\r\n\r\n                    <TextField \r\n                        name='lastName'\r\n                        label='Last Name'\r\n                        value={lastName}\r\n                        onChange={handleTextChange}\r\n                        required\r\n                    />\r\n\r\n                    <TextField \r\n                        name='Office'\r\n                        label='Office'\r\n                        value={props.office.officeName}\r\n                        required\r\n                    />\r\n\r\n                    {props.section.sectionName !== \"default\" && (\r\n                        <TextField \r\n                            name='section'\r\n                            label='Section'\r\n                            value={props.section.sectionName}\r\n                            required\r\n                        />\r\n                    )}\r\n\r\n                    <TextField \r\n                        name='position'\r\n                        label='Position'\r\n                        value={position}\r\n                        onChange={handleTextChange}\r\n                        required\r\n                    />\r\n\r\n                    {resetCode && (\r\n                        <TextField \r\n                            name='resetCode'\r\n                            label='Reset Code'\r\n                            value={resetCode}\r\n                        />\r\n                    )}\r\n                 \r\n\r\n                    <Stack spacing={1}>\r\n                        <Button \r\n                            type='submit'\r\n                            variant='contained'\r\n                            fullWidth\r\n                        >\r\n                            {props.officer ? \"Update\" : \"Register\"}\r\n                        </Button>\r\n\r\n                        <Button \r\n                            variant='outlined'\r\n                            onClick={props.onClose}\r\n                            fullWidth\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </Stack>\r\n\r\n                </Stack>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}","import React from 'react';\r\n// mui\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Divider from '@mui/material/Divider';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Button from '@mui/material/Button';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Grid from '@mui/material/Grid';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { BirOffices, OfficeSections, UserAccounts } from '../../api/threads/types';\r\n// icons\r\nimport SupervisorAccountOutlinedIcon from '@mui/icons-material/SupervisorAccountOutlined';\r\n// api\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_BIR_OFFICE_BY_ID } from '../../api/offices';\r\nimport { LoadOverlay } from '../../components/Loaders';\r\n// project imports\r\nimport AddOfficerDrawer from './OfficerDialog';\r\n\r\n\r\ninterface OfficeSectionListProps {\r\n    officeId: number;\r\n}\r\n\r\nexport default function OfficeSectionList(props: OfficeSectionListProps) {\r\n    const theme = useTheme();\r\n    const { data: office, loading, refetch } = useQuery<{ getBirOfficeById: BirOffices }>(GET_BIR_OFFICE_BY_ID, { variables: {\r\n        officeId: props.officeId\r\n    }});\r\n    const [selectedSection, setSelectedSection] = React.useState<OfficeSections | null>(null);\r\n    const [selectedUser, setSelectedUser] = React.useState<UserAccounts | null>(null);\r\n\r\n    if (!office) return <LoadOverlay open={loading} />\r\n\r\n    const reloadList = () => refetch({ officeId: props.officeId });\r\n\r\n    const handleSelectUser = (user: UserAccounts, section: OfficeSections) => {\r\n        setSelectedSection(section);\r\n        setSelectedUser(user);\r\n    } \r\n\r\n    const handleCloseOfficerDialog = () => {\r\n        setSelectedSection(null);\r\n        setSelectedUser(null);\r\n    }\r\n\r\n    return (\r\n        <Paper sx={{ width: \"100%\", height: '100%' }}>\r\n            <Box \r\n                sx={{ \r\n                    p: 2, \r\n                    display: 'flex', \r\n                    flexDirection: 'row', \r\n                    alignItems: 'center'\r\n                }}\r\n            >\r\n                <Typography variant='h6'>{`${office.getBirOfficeById.officeName} Sections`}</Typography>\r\n            </Box>\r\n\r\n            <Divider />\r\n\r\n            <Grid \r\n                container   \r\n                spacing={3} \r\n                alignItems=\"stretch\" \r\n                sx={{ \r\n                    mt: 1,\r\n                    px: 2,\r\n                    pb: 2,\r\n                    width: '100%',\r\n                    maxHeight: 'calc(100vh - 170px)', \r\n                    overflowY: 'auto',\r\n                    \"::-webkit-scrollbar\": {\r\n                    height: \"8px\",\r\n                    width: \"8px\"\r\n                    },\r\n\r\n                    /* Track */\r\n                    \"::-webkit-scrollbar-track\": {\r\n                        background: theme.palette.grey[300] \r\n                    },\r\n                    \r\n                    /* Handle */\r\n                    \"::-webkit-scrollbar-thumb\": {\r\n                        background: theme.palette.secondary.dark\r\n                    },\r\n                    \r\n                    /* Handle on hover */\r\n                    \"::-webkit-scrollbar-thumb:hover\": {\r\n                        background: theme.palette.primary.dark\r\n                    }\r\n                }}>\r\n                \r\n                {office.getBirOfficeById.officeSections.filter((o, index, arr) => o.sectionName !== \"default\" || arr.length === 1).map(section => (\r\n                    <Grid item md={6} key={section.sectionId}>\r\n                        <Card sx={{ width: '100%', height: '100%' }}>\r\n                            <CardHeader \r\n                                title={section.sectionName === 'default' ? 'Main' : section.sectionName}\r\n                                action={\r\n                                    <Button variant='contained' sx={{ ml: 2 }} onClick={() => setSelectedSection(section)}>\r\n                                        Register\r\n                                    </Button>\r\n                                }\r\n                            />\r\n                            <CardContent>\r\n                                <Divider />\r\n                                {section.officers.length === 0 && (\r\n                                    <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n                                        <SupervisorAccountOutlinedIcon color='secondary' sx={{ fontSize: 48, my: 1 }} />\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            No Officer Registered\r\n                                        </Typography>\r\n                                        <Typography variant=\"body1\">\r\n                                            Click Register to Add Officers\r\n                                        </Typography>\r\n                                    </Box>\r\n                                )}\r\n                                <List>\r\n                                    {section.officers.map(officer => (\r\n                                        <React.Fragment key={officer.accountId}>\r\n                                            <ListItemButton alignItems=\"flex-start\" onClick={() => handleSelectUser(officer, section)}>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar>\r\n                                                        {`${officer.firstName.charAt(0)}${officer.lastName.charAt(0)}`}\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={\r\n                                                        <Box>\r\n                                                            <Typography variant='body1'>\r\n                                                                {officer.firstName + ' ' + officer.lastName}\r\n                                                            </Typography>\r\n                                                            <Typography variant='caption' gutterBottom>\r\n                                                                {officer.position}\r\n                                                            </Typography>\r\n                                                        </Box>\r\n                                                    }\r\n                                                />\r\n                                            </ListItemButton>\r\n                                            <Divider variant=\"inset\" component=\"li\" />\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                </List>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n\r\n                {selectedSection && (\r\n                    <AddOfficerDrawer \r\n                        open={selectedSection !== null}  \r\n                        section={selectedSection}\r\n                        officer={selectedUser}\r\n                        office={office.getBirOfficeById}\r\n                        onClose={handleCloseOfficerDialog}\r\n                        onSubmit={reloadList}\r\n                    />\r\n                )}\r\n            </Grid> \r\n        </Paper>\r\n    )\r\n}","import React from 'react';\r\n// mui\r\nimport Grid from '@mui/material/Grid';\r\n// project imports\r\nimport OfficeList from './OfficeList';\r\nimport OfficeSectionList from './OfficeSectionList';\r\n\r\nexport default function UsersPage() {\r\n    const [selectedOffice, setSelectedOffice] = React.useState<number>(1);\r\n\r\n    const handleSelectedOfficeChange = (officeId: number) => setSelectedOffice(officeId);\r\n\r\n    return (\r\n        <Grid container spacing={3} alignItems=\"stretch\" sx={{ height: \"95%\" }}>\r\n            <Grid item md={4}>\r\n                <OfficeList selected={selectedOffice} onSelect={handleSelectedOfficeChange} />\r\n            </Grid>\r\n            <Grid item md={8}>\r\n                <OfficeSectionList officeId={selectedOffice} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 12c1.93 0 3.5-1.57 3.5-3.5S10.93 5 9 5 5.5 6.57 5.5 8.5 7.07 12 9 12zm0-5c.83 0 1.5.67 1.5 1.5S9.83 10 9 10s-1.5-.67-1.5-1.5S8.17 7 9 7zm.05 10H4.77c.99-.5 2.7-1 4.23-1 .11 0 .23.01.34.01.34-.73.93-1.33 1.64-1.81-.73-.13-1.42-.2-1.98-.2-2.34 0-7 1.17-7 3.5V19h7v-1.5c0-.17.02-.34.05-.5zm7.45-2.5c-1.84 0-5.5 1.01-5.5 3V19h11v-1.5c0-1.99-3.66-3-5.5-3zm1.21-1.82c.76-.43 1.29-1.24 1.29-2.18C19 9.12 17.88 8 16.5 8S14 9.12 14 10.5c0 .94.53 1.75 1.29 2.18.36.2.77.32 1.21.32s.85-.12 1.21-.32z\"\n}), 'SupervisorAccountOutlined');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["AddOfficeDialog","props","_useMutation","useMutation","ADD_BIR_OFFICE","_useMutation2","_slicedToArray","addBirOffice","loading","_React$useState","React","_React$useState2","officeName","setOfficeName","handleSubmitOffice","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","preventDefault","variables","data","officeSections","onSubmit","onClose","stop","_x","apply","arguments","_jsxs","children","_jsx","LoadOverlay","open","Dialog","maxWidth","DialogTitle","DialogContent","TextField","autoFocus","margin","name","label","value","onChange","target","fullWidth","variant","required","sx","width","DialogActions","Button","onClick","type","DeleteOfficeDialog","DELETE_BIR_OFFICE","deleteBirOffice","handleDeleteOffice","officeId","office","onDelete","id","length","concat","DialogContentText","color","OfficeList","theme","useTheme","_useQuery","useQuery","GET_ALL_BIR_OFFICES","offices","refetch","add","setAdd","_React$useState3","_React$useState4","selected","setSelected","handleToggleDialog","handleRefresh","Paper","height","Box","p","display","flexDirection","justifyContent","alignItems","Typography","Divider","List","maxHeight","overflowY","background","palette","grey","secondary","dark","primary","getAllBirOffices","BusinessIcon","fontSize","mb","map","ListItem","secondaryAction","IconButton","handleConfirmDelete","DeleteOutlineOutlinedIcon","ListItemButton","onSelect","ListItemText","gutterBottom","OfficerDrawer","REGISTER_OFFICER","registerOfficer","_useMutation3","UPDATE_OFFICER","updateOfficer","_useMutation5","DELETE_OFFICER","deleteOfficer","accountId","firstName","lastName","section","sectionId","position","resetCode","formData","setFormData","officer","handleTextChange","_objectSpread","_defineProperty","handleSubmitOfficer","handleUpdateOfficer","_ref2","_callee2","_context2","_x2","handleDeleteOfficer","_ref3","_callee3","_context3","Stack","direction","component","spacing","mt","sectionName","OfficeSectionList","GET_BIR_OFFICE_BY_ID","selectedSection","setSelectedSection","selectedUser","setSelectedUser","getBirOfficeById","Grid","container","px","pb","filter","o","index","arr","item","md","Card","CardHeader","title","action","ml","CardContent","officers","SupervisorAccountOutlinedIcon","my","user","handleSelectUser","ListItemAvatar","Avatar","charAt","AddOfficerDrawer","UsersPage","selectedOffice","setSelectedOffice","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","styles","root","padding","paddingBottom","inProps","ref","useThemeProps","className","_props$component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardHeaderUtilityClass","CardHeaderRoot","_extends2","cardHeaderClasses","subheader","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","_props$disableTypogra","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","getCardUtilityClass","CardRoot","overflow","_props$raised","raised","elevation","undefined"],"sourceRoot":""}