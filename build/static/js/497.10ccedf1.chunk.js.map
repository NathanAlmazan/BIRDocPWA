{"version":3,"file":"static/js/497.10ccedf1.chunk.js","mappings":"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","sources":["pages/authentication/ForgotPassword.tsx","pages/authentication/LoginUser.tsx","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from \"react-router-dom\"\n// material\nimport { styled } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport Button from '@mui/material/Button';\nimport Alert from '@mui/material/Alert';\n// icons\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n// api\nimport { useMutation, useQuery } from '@apollo/client';\nimport { BirOffices, Roles, UserAccounts } from '../../api/threads/types';\nimport { GET_ALL_BIR_OFFICES, GET_ALL_ROLES, USER_REGISTER } from '../../api/offices';\nimport { getFilteredOffices } from './LoginUser';\n\n// ----------------------------------------------------------------------\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\n// ----------------------------------------------------------------------\n\nexport interface RegisterUserForm {\n    firstName: string;\n    lastName: string;\n    officeId: number;\n    sectionId: number;\n    roleId: number;\n    resetCode: string;\n    password: string;\n}\n\nexport default function RegisterUser() {\n  const navigate = useNavigate();\n  const { data: offices } = useQuery<{ getAllBirOffices: BirOffices[] }>(GET_ALL_BIR_OFFICES);\n  const { data: roles } = useQuery<{ getAllRoles: Roles[] }>(GET_ALL_ROLES);\n  const [registerUser, { data: userAccount, error }] = useMutation<{ changePassword: UserAccounts }>(USER_REGISTER);\n  const [visible, setVisible] = React.useState<boolean>(false);\n  const [showSections, setShowSections] = React.useState<boolean>(true);\n  const [selectedOffice, setSelectedOffice] = React.useState<BirOffices>();\n  const [credentials, setCredentials] = React.useState<RegisterUserForm>({\n    firstName: \"\",\n    lastName: \"\",\n    officeId: 3,\n    sectionId: 3,\n    password: \"\",\n    roleId: 9,\n    resetCode: \"\"\n  })\n  const { firstName, lastName, officeId, sectionId, roleId, password, resetCode } = credentials;\n\n  React.useEffect(() => {\n    if (offices) {\n        const selected = offices.getAllBirOffices.find(office => office.officeId === officeId);\n        setSelectedOffice(selected);\n\n        if (selected && [3, 4, 5, 6].includes(roleId)) {\n            setShowSections(false);\n            setCredentials(state => ({ ...state, sectionId: selected.officeSections[0].sectionId }));\n        }\n        else if (selected && selected.officeSections.length > 1) {\n            setShowSections(true);\n            setCredentials(state => ({ ...state, sectionId: selected.officeSections[1].sectionId }));\n        }\n        else if (selected) {\n            setShowSections(false);\n            setCredentials(state => ({ ...state, sectionId: selected.officeSections[0].sectionId }));\n        }\n    }\n  }, [officeId, offices, roleId]);\n\n  React.useEffect(() => {\n    if (roleId === 1) {\n        setShowSections(false);\n        setCredentials(state => ({ ...state, sectionId: 1, officeId: 1 }));\n    } else if (roleId === 2) {\n        setShowSections(false);\n        setCredentials(state => ({ ...state, sectionId: 2, officeId: 2 }));\n    } else if (offices) {\n        setCredentials(state => ({ ...state, officeId: offices.getAllBirOffices.filter(office => getFilteredOffices(roleId, office.officeId))[0].officeId }));\n    }\n  }, [roleId, offices])\n\n  React.useEffect(() => {\n    if (userAccount) navigate(\"/auth/login\");\n  }, [userAccount, navigate])\n\n  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCredentials({ ...credentials, [event.target.name]: event.target.value })\n  }\n\n  const handleRegisterUser = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    try {\n        await registerUser({\n            variables: {\n                data: {\n                    firstName: firstName,\n                    lastName: lastName,\n                    officeId: sectionId,\n                    roleId: roleId,\n                    resetCode: resetCode,\n                    password: password\n                }\n            }\n        })\n    } catch (err) {}\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <ContentStyle>\n        <Stack sx={{ mb: 2 }}>\n          <Typography variant=\"h4\" gutterBottom>\n              Reset Password\n          </Typography>\n          <Typography sx={{ color: 'text.secondary' }}>Enter credentials below to reset password.</Typography>\n        </Stack>\n        \n        {error && (\n            <Alert severity='error' sx={{ my: 2 }}>{error.message}</Alert>\n        )}\n\n        <Stack spacing={2} component='form' onSubmit={handleRegisterUser}>\n            <TextField \n                name='firstName'\n                label='First Name'\n                value={firstName}\n                onChange={handleTextChange}\n                fullWidth\n                required\n            />\n\n            <TextField \n                name='lastName'\n                label='Last Name'\n                value={lastName}\n                onChange={handleTextChange}\n                fullWidth\n                required\n            />\n\n            {roles && (\n                <TextField \n                    name='roleId'\n                    label='Position'\n                    value={roleId}\n                    onChange={handleTextChange}\n                    fullWidth\n                    required\n                    select\n                >\n                    {roles.getAllRoles.map(role => (\n                        <MenuItem key={role.roleId} value={role.roleId}>{role.roleName}</MenuItem>\n                    ))}\n                </TextField>\n            )}\n\n            {offices && (\n                <TextField \n                    name='officeId'\n                    label='Office'\n                    value={officeId}\n                    onChange={handleTextChange}\n                    fullWidth\n                    required\n                    select\n                >\n                    {offices.getAllBirOffices.filter(office => getFilteredOffices(roleId, office.officeId)).map(office => (\n                        <MenuItem key={office.officeId} value={office.officeId}>{office.officeName}</MenuItem>\n                    ))}\n                </TextField>\n            )}\n\n            {showSections && selectedOffice && selectedOffice.officeSections.length > 1 && (\n                <TextField \n                    name='sectionId'\n                    label='Section'\n                    value={sectionId}\n                    onChange={handleTextChange}\n                    fullWidth\n                    required\n                    select\n                >\n                    {selectedOffice.officeSections.filter(section => section.sectionName !== \"default\").map(section => (\n                        <MenuItem key={section.sectionId} value={section.sectionId}>{section.sectionName === \"default\" ? \"Main\" : section.sectionName}</MenuItem>\n                    ))}\n                </TextField>\n            )}\n\n            <TextField \n                autoComplete='off'\n                name='resetCode'\n                label='Reset Code'\n                value={resetCode}\n                onChange={handleTextChange}\n                fullWidth\n                required\n                helperText={'Please ask your Division Chief or System Admin for your Reset Code'}\n                inputProps={{ min: 6, max: 6 }}\n            />\n\n            <TextField\n                fullWidth\n                type={visible ? 'text' : 'password'}\n                label=\"New Password\"\n                name='password'\n                required\n                value={password}\n                onChange={handleTextChange}\n                inputProps={{ minLength: 8 }}\n                InputProps={{\n                endAdornment: (\n                    <InputAdornment position=\"end\">\n                        <IconButton onClick={() => setVisible(!visible)} edge=\"end\">\n                            {visible ?  <VisibilityOffIcon /> : <VisibilityIcon />}\n                        </IconButton>\n                    </InputAdornment>\n                )\n                }}\n            />\n\n            <Button\n                type='submit'\n                variant='contained'\n                color='secondary'\n                fullWidth\n            >\n                Reset Password\n            </Button>\n        </Stack>\n\n        <Typography variant=\"body2\" align=\"center\" sx={{ mt: 3 }}>\n          <Link variant=\"subtitle2\" onClick={() => navigate(\"/auth/login\")} sx={{ cursor: 'pointer' }}>\n            Go Back to Login\n          </Link>\n        </Typography>\n      </ContentStyle>\n    </Container>\n  );\n}\n\n","import React from 'react';\nimport { useNavigate } from \"react-router-dom\"\n// material\nimport { styled } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport Button from '@mui/material/Button';\nimport Alert from '@mui/material/Alert';\n// icons\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n// api\nimport { useMutation, useQuery } from '@apollo/client';\nimport { BirOffices, Roles, UserAccounts } from '../../api/threads/types';\nimport { GET_ALL_BIR_OFFICES, GET_ALL_ROLES, USER_LOGIN } from '../../api/offices';\n// redux\nimport { useAppDispatch } from '../../redux/hooks';\nimport { login } from '../../redux/slice/auth';\n\n// ----------------------------------------------------------------------\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  minHeight: '100vh',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\n// ----------------------------------------------------------------------\n\nexport interface RegisterUserForm {\n    firstName: string;\n    lastName: string;\n    officeId: number;\n    roleId: number;\n    sectionId: number;\n    password: string;\n}\n\nexport const getFilteredOffices = (roleId: number, officeId: number): boolean => {\n    if (roleId === 1) return (officeId === 1);\n    else if (roleId === 2) return (officeId === 2);\n    else if (roleId === 3 || roleId === 4) return [11, 12, 13, 14, 15, 16, 17].includes(officeId);\n    else if (roleId === 5 || roleId === 6) return [3, 4, 5, 6, 7, 8, 9, 10].includes(officeId);\n    else return true;\n}\n\nexport default function LoginUser() {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const { data: offices } = useQuery<{ getAllBirOffices: BirOffices[] }>(GET_ALL_BIR_OFFICES);\n  const { data: roles } = useQuery<{ getAllRoles: Roles[] }>(GET_ALL_ROLES);\n  const [userLogin, { data: userAccount, error }] = useMutation<{ userLogin: UserAccounts }>(USER_LOGIN);\n  const [selectedOffice, setSelectedOffice] = React.useState<BirOffices>();\n  const [showSections, setShowSections] = React.useState<boolean>(true);\n  const [visible, setVisible] = React.useState<boolean>(false);\n  const [credentials, setCredentials] = React.useState<RegisterUserForm>({\n    firstName: \"\",\n    lastName: \"\",\n    officeId: 1,\n    sectionId: 1,\n    roleId: 9,\n    password: \"\"\n  })\n  const { firstName, lastName, officeId, sectionId, roleId, password } = credentials;\n\n  React.useEffect(() => {\n    if (offices) {\n        const selected = offices.getAllBirOffices.find(office => office.officeId === officeId);\n        setSelectedOffice(selected);\n\n        if (selected && [3, 4, 5, 6].includes(roleId)) {\n            setShowSections(false);\n            setCredentials(state => ({ ...state, sectionId: selected.officeSections[0].sectionId }));\n        }\n        else if (selected && selected.officeSections.length > 1) {\n            setShowSections(true);\n            setCredentials(state => ({ ...state, sectionId: selected.officeSections[1].sectionId }));\n        }\n        else if (selected) {\n            setShowSections(false);\n            setCredentials(state => ({ ...state, sectionId: selected.officeSections[0].sectionId }));\n        }\n    }\n  }, [officeId, offices, roleId]);\n\n  React.useEffect(() => {\n    if (roleId === 1) {\n        setShowSections(false);\n        setCredentials(state => ({ ...state, sectionId: 1, officeId: 1 }));\n    } else if (roleId === 2) {\n        setShowSections(false);\n        setCredentials(state => ({ ...state, sectionId: 2, officeId: 2 }));\n    } else if (offices) {\n        setCredentials(state => ({ ...state, officeId: offices.getAllBirOffices.filter(office => getFilteredOffices(roleId, office.officeId))[0].officeId }));\n    }\n  }, [roleId, offices])\n\n  React.useEffect(() => {\n    if (userAccount) {\n        dispatch(login({\n            uid: userAccount.userLogin.accountId,\n            username: userAccount.userLogin.firstName + \" \" + userAccount.userLogin.lastName,\n            role: userAccount.userLogin.role,\n            office: {\n                sectionId: userAccount.userLogin.officeSection.sectionId,\n                sectionName: userAccount.userLogin.officeSection.sectionName,\n                officers: [],\n                sectionOffice: {\n                    officeId: userAccount.userLogin.officeSection.sectionOffice.officeId,\n                    officeName: userAccount.userLogin.officeSection.sectionOffice.officeName,\n                    officeSections: []\n                }\n            }\n        }));\n        navigate(\"/app/dashboard\");\n    }\n  }, [userAccount, navigate, dispatch])\n\n  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCredentials({ ...credentials, [event.target.name]: event.target.value })\n  }\n\n  const handleRegisterUser = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    try {\n        await userLogin({\n            variables: {\n                data: {\n                    firstName: firstName,\n                    lastName: lastName,\n                    officeId: sectionId,\n                    password: password,\n                    roleId: roleId\n                }\n            }\n        })\n    } catch (err) {}\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <ContentStyle>\n        <Stack sx={{ mb: 5 }}>\n          <Typography variant=\"h4\" gutterBottom>\n              Sign In\n          </Typography>\n          <Typography sx={{ color: 'text.secondary' }}>Enter your credentials below.</Typography>\n        </Stack>\n\n        {error && (\n            <Alert severity='error' sx={{ my: 2 }}>{`${error.message}. `} <a href='/auth/reset'>Forgot Password?</a></Alert>\n        )}\n        \n        <Stack spacing={2} component='form' onSubmit={handleRegisterUser}>\n            <TextField \n                name='firstName'\n                label='First Name'\n                value={firstName}\n                onChange={handleTextChange}\n                fullWidth\n                required\n            />\n\n            <TextField \n                name='lastName'\n                label='Last Name'\n                value={lastName}\n                onChange={handleTextChange}\n                fullWidth\n                required\n            />\n\n            {roles && (\n                <TextField \n                    name='roleId'\n                    label='Position'\n                    value={roleId}\n                    onChange={handleTextChange}\n                    fullWidth\n                    required\n                    select\n                >\n                    {roles.getAllRoles.map(role => (\n                        <MenuItem key={role.roleId} value={role.roleId}>{role.roleName}</MenuItem>\n                    ))}\n                </TextField>\n            )}\n\n            {offices && (\n                <TextField \n                    name='officeId'\n                    label='Office'\n                    value={officeId}\n                    onChange={handleTextChange}\n                    fullWidth\n                    required\n                    select\n                >\n                    {offices.getAllBirOffices.filter(office => getFilteredOffices(roleId, office.officeId)).map(office => (\n                        <MenuItem key={office.officeId} value={office.officeId}>{office.officeName}</MenuItem>\n                    ))}\n                </TextField>\n            )}\n\n           {showSections && selectedOffice && selectedOffice.officeSections.length > 1 && (\n                <TextField \n                    name='sectionId'\n                    label='Section'\n                    value={sectionId}\n                    onChange={handleTextChange}\n                    fullWidth\n                    required\n                    select\n                >\n                    {selectedOffice.officeSections.filter(section => section.sectionName !== \"default\").map(section => (\n                        <MenuItem key={section.sectionId} value={section.sectionId}>{section.sectionName === \"default\" ? \"Main\" : section.sectionName}</MenuItem>\n                    ))}\n                </TextField>\n           )}\n\n            <TextField\n                fullWidth\n                type={visible ? 'text' : 'password'}\n                label=\"Password\"\n                name='password'\n                required\n                value={password}\n                onChange={handleTextChange}\n                InputProps={{\n                endAdornment: (\n                    <InputAdornment position=\"end\">\n                        <IconButton onClick={() => setVisible(!visible)} edge=\"end\">\n                            {visible ?  <VisibilityOffIcon /> : <VisibilityIcon />}\n                        </IconButton>\n                    </InputAdornment>\n                )\n                }}\n            />\n\n            <Button\n                type='submit'\n                variant='contained'\n                color='secondary'\n                fullWidth\n            >\n                Login\n            </Button>\n        </Stack>\n\n        <Typography variant=\"body2\" align=\"center\" sx={{ mt: 3 }}>\n          <Link variant=\"subtitle2\" onClick={() => navigate(\"/auth/register\")} sx={{ cursor: 'pointer' }}>\n            Register Account\n          </Link>\n        </Typography>\n      </ContentStyle>\n    </Container>\n  );\n}\n\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["ContentStyle","styled","_ref","maxWidth","margin","display","flexDirection","justifyContent","padding","theme","spacing","RegisterUser","navigate","useNavigate","offices","useQuery","GET_ALL_BIR_OFFICES","data","roles","GET_ALL_ROLES","_useMutation","useMutation","USER_REGISTER","_useMutation2","_slicedToArray","registerUser","_useMutation2$","userAccount","error","_React$useState","React","_React$useState2","visible","setVisible","_React$useState3","_React$useState4","showSections","setShowSections","_React$useState5","_React$useState6","selectedOffice","setSelectedOffice","_React$useState7","firstName","lastName","officeId","sectionId","password","roleId","resetCode","_React$useState8","credentials","setCredentials","selected","getAllBirOffices","find","office","includes","state","_objectSpread","officeSections","length","filter","getFilteredOffices","handleTextChange","event","_defineProperty","target","name","value","handleRegisterUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","variables","t0","stop","_x","apply","arguments","_jsx","Container","children","_jsxs","Stack","sx","mb","Typography","variant","gutterBottom","color","Alert","severity","my","message","component","onSubmit","TextField","label","onChange","fullWidth","required","select","getAllRoles","map","role","MenuItem","roleName","officeName","section","sectionName","autoComplete","helperText","inputProps","min","max","type","minLength","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","VisibilityOffIcon","VisibilityIcon","Button","align","mt","Link","cursor","minHeight","LoginUser","dispatch","useAppDispatch","USER_LOGIN","userLogin","login","uid","accountId","username","officeSection","officers","sectionOffice","concat","href","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","componentName","ContainerRoot","_extends","width","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","_ref3","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref4","Math","xs","ref","className","_props$component","_props$disableGutters","_props$fixed","_props$maxWidth","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","clsx","createContainer"],"sourceRoot":""}